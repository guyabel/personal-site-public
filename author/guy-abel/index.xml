<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guy Abel</title>
    <link>https://guyabel.com/author/guy-abel/</link>
      <atom:link href="https://guyabel.com/author/guy-abel/index.xml" rel="self" type="application/rss+xml" />
    <description>Guy Abel</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-uk</language><copyright>Â© 2024 Guy Abel</copyright><lastBuildDate>Sun, 16 Jun 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://guyabel.com/author/guy-abel/avatar_hu5586689ca903b99c3d2e8ba7e4c0b0ce_470585_270x270_fill_q75_lanczos_center.jpg</url>
      <title>Guy Abel</title>
      <link>https://guyabel.com/author/guy-abel/</link>
    </image>
    
    <item>
      <title>The evolution of squad compositions at UEFA European Championships</title>
      <link>https://guyabel.com/post/uefa-ec-chord-diagram/</link>
      <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/uefa-ec-chord-diagram/</guid>
      <description>&lt;h2 id=&#34;euro-2024&#34;&gt;Euro 2024&lt;/h2&gt;
&lt;p&gt;Whilst waiting for a delayed flight I managed to update my &lt;a href=&#34;https://github.com/guyabel/uefa-ec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;uefa-ec &lt;/a&gt; GitHub repository with new data on the squads at the current European Championships from &lt;a href=&#34;https://en.wikipedia.org/wiki/UEFA_Euro_2024_squads&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia&lt;/a&gt;, and the code to visualise where national team players play their club football using the chordDiagram() function in the &lt;a href=&#34;https://jokergoo.github.io/circlize_book/book/the-chorddiagram-function.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;circlize&lt;/a&gt; R package.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;featured.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;The chords represent connections between the country of a player&amp;rsquo;s club (at the chord base) and their national team (at the arrow head). The colours of each chord in the plot are based on the shirt of each national team. Chord thickness represents the number of players per club country-national team combination. The countries are ordered by the groups that they will play in during the first round (in the animation below I order the teams by their first appearance at a tournament). The countries at the top of the diagram with no flags are leagues where the national team are not represented at the tournament, but some of clubs have players representing other national teams.&lt;/p&gt;
&lt;p&gt;The chords coming out of each sector are ordered by the number of players in each connection. The big five leagues (England, France, Germany, Italy and Spain) host many players. In some squads, such as Albania, Georgia and Slovakia, almost all the players play for club teams abroad.&lt;/p&gt;
&lt;h2 id=&#34;evolution-over-time&#34;&gt;Evolution over time&lt;/h2&gt;
&lt;p&gt;Below is some code adapted from previous animated migration &lt;a href=&#34;https://guyabel.com/categories/chord-diagram/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;chord diagrams&lt;/a&gt; to provide a history of the relationships between the club leagues of the players and the national team squads at each European Championship, throughout its history. In most early tournaments almost all the players came from clubs in their home country. Slowly you can see the increasing amount of national team players coming from clubs abroad and the expansion of the number of teams in the tournament.&lt;/p&gt;
&lt;style&gt;
video {
  /* override other styles to make responsive */
  width: 100%    !important;
  height: auto   !important;
  max-height: 720px
}
&lt;/style&gt;
&lt;video loop=&#34;loop&#34; controls&gt;
  &lt;source src=&#34;abel-euro.mp4&#34; type=&#34;video/mp4&#34; /&gt;
&lt;/video&gt;
&lt;p&gt;Note: you might have to right click, select show controls and hit play to start the animations depending on your browsers - right clicking can also allow you to access controls on the play back speed.&lt;/p&gt;
&lt;h2 id=&#34;r-code&#34;&gt;R Code&lt;/h2&gt;
&lt;p&gt;The R code to scrape the squads, flags, kit colours and tournament logos are all in the Github &lt;a href=&#34;https://github.com/guyabel/uefa-ec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;. The repo also includes the code to produce the plot and animation. The Data Digest has a nice YouTube &lt;a href=&#34;https://www.youtube.com/watch?v=N0l9ebyLV-k&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tutorial&lt;/a&gt; to explain an older version of the code and plots for Euro 2020.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Animated population tree maps</title>
      <link>https://guyabel.com/post/animated-population-treemaps/</link>
      <pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/animated-population-treemaps/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;The global population hit 8 billion &lt;a href=&#34;https://www.un.org/en/desa/world-population-reach-8-billion-15-november-2022&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;today&lt;/a&gt;. To mark the passing an absolute population total I created some animated tree map plots in R to visualize relative past and future population totals for all countries.&lt;/p&gt;
&lt;h2 id=&#34;plots&#34;&gt;Plots&lt;/h2&gt;
&lt;p&gt;The first animated plot shows the changes over time in the distribution of population totals based on the latest &lt;a href=&#34;https://population.un.org/wpp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;United Nations&lt;/a&gt; data, provided in the &lt;a href=&#34;https://github.com/PPgp/wpp2022&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wpp2022&lt;/a&gt; package.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;abel-tree-pop.gif&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;The second animation shows the changes over time in the distribution of population with at least a completed secondary education. Country estimates and projections were obtained from the &lt;a href=&#34;http://dataexplorer.wittgensteincentre.org/wcde-v2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wittgenstein Centre for Human Capital and Demography&lt;/a&gt; via the &lt;a href=&#34;https://guyabel.github.io/wcde/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wcde&lt;/a&gt; package that I helped develop. The past estimates of education specific populations are based on a method to breakdown the United Nations population data. However, the future population totals (and the relative size of each country) differ between the United Nations and the Wittgenstein Centre as each group use separate assumptions and methods in their projection models.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;abel-tree-hc.gif&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;r-code&#34;&gt;R Code&lt;/h2&gt;
&lt;p&gt;Commented code to create the animated plots below are in two Gist &lt;a href=&#34;https://gist.github.com/guyabel/2307ecdd9844b6fd504b97144758a656&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://gist.github.com/guyabel/56f6b7750c44d1444675d93a599cccaa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. You can run the script directly in R using the following&amp;hellip;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(devtools)
# UN population data
source_gist(&#34;https://gist.github.com/guyabel/2307ecdd9844b6fd504b97144758a656&#34;)
# Wittgenstein Centre completed secondary education population data
source_gist(&#34;https://gist.github.com/guyabel/56f6b7750c44d1444675d93a599cccaa&#34;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first part of each script imports the data into R, adds the continent and region names to help order the layout, and adds short country names for labels used in the plot.&lt;/p&gt;
&lt;p&gt;The second part of the code creates a function for a single tree plot in a specific year. The function is then used twice. First to animate past data and second to animate future data. I created separate animations to allow for a pause in the GIF at 2022 and to signal in the title that data for future population distributions are based on projections.&lt;/p&gt;
&lt;p&gt;The key to the animating tree maps is to set &lt;code&gt;layout = &amp;quot;fixed&amp;quot;&lt;/code&gt; in the &lt;code&gt;geom_treemap()&lt;/code&gt; function (in the &lt;a href=&#34;https://cran.r-project.org/web/packages/treemapify/vignettes/introduction-to-treemapify.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;treemapify&lt;/a&gt; package). I chose to group the countries by continent and then sub-region, locating neighbouring counties in the same part of the tree map and using the same fill colour.&lt;/p&gt;
&lt;p&gt;The third part of the code generates two separate GIF files for each time period and then combines them into one.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Animated Sankey plots of global migrant populations</title>
      <link>https://guyabel.com/post/animated-sankey/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/animated-sankey/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;Sankey plots have been used to visualize bilateral migration many times. My favorite examples of Sankey plots for migration data tend to be when there are only few regions or countries. As the number of regions or countries increases the plot become more cumbersome, where labels for the smaller areas get too small and the plotting area becomes a very long rectangle making it awkward to fit on paper or view on the screen. In such cases I prefer &lt;a href=&#34;https://guyabel.com/post/global-migrant-stocks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;chord diagrams&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The recent highlights &lt;a href=&#34;https://www.un.org/development/desa/pd/sites/www.un.org.development.desa.pd/files/undesa_pd_2020_international_migration_highlights.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;document&lt;/a&gt; for the UN international migration stock data contained a couple of Sankey plots for the data in 2020. In this post I have created animated versions of one of the plots in the report to show changes in migrant distributions between 1990 and 2020 by World Bank income groups. I am using the destination and origin migrant stock data of the UN that can found online &lt;a href=&#34;https://www.un.org/development/desa/pd/content/international-migrant-stock&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; - see the data links on the right hand side.&lt;/p&gt;
&lt;h2 id=&#34;r-code&#34;&gt;R Code&lt;/h2&gt;
&lt;p&gt;Commented code to create the animated plots below are in a Gist &lt;a href=&#34;https://gist.github.com/guyabel/f7c844f18c4d11916a6ee000532d0e8e&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. You can run the script directly in R using the following&amp;hellip;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(devtools)
source_gist(&#34;https://gist.github.com/guyabel/f7c844f18c4d11916a6ee000532d0e8e&#34;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;hellip;so long as you have installed all packages used in the script. You might also need to edit the &lt;code&gt;saveVideo()&lt;/code&gt; function for the location of &lt;code&gt;ffmpeg.exe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The first part of the code imports the data into R, extracts the rows for the stock data by the World Bank income groups and creates a tweened data set for each frame of the animation.&lt;/p&gt;
&lt;p&gt;The second part of the code creates the animated plot file using ggplot and &lt;code&gt;geom_parallel_sets()&lt;/code&gt; in &lt;a href=&#34;https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ggforce&lt;/a&gt;. There are a few packages in R that have functions for Sankey plots, for example &lt;a href=&#34;https://github.com/gaborcsardi/sankey#readme&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sankey&lt;/a&gt;, &lt;a href=&#34;https://cran.r-project.org/web/packages/PantaRhei/vignettes/panta-rhei.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PantaRhei&lt;/a&gt;, &lt;a href=&#34;http://christophergandrud.github.io/networkD3/#sankey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;networkD3&lt;/a&gt;, &lt;a href=&#34;https://cran.rstudio.com/web/packages/sankeywheel/vignettes/sankeywheel.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sankeywheel&lt;/a&gt;, &lt;a href=&#34;https://plotly.com/r/sankey-diagram/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;plotly&lt;/a&gt; and &lt;a href=&#34;https://github.com/davidsjoberg/ggsankey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ggsankey&lt;/a&gt;. The &lt;a href=&#34;https://corybrunson.github.io/ggalluvial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ggalluvial&lt;/a&gt; packages also produces Sankey-type plots, but without spaces between each sector. I used ggforce because it is pretty easy to tweak the non-Sankey parts of the plot using ggplot functions, and  I had hoped that it would play well with gganimate - which it didn&amp;rsquo;t, hence the use of tweenr - but perhaps &lt;a href=&#34;https://github.com/thomasp85/ggforce/issues/235&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;one day&lt;/a&gt; it will.&lt;/p&gt;
&lt;h2 id=&#34;plots&#34;&gt;Plots&lt;/h2&gt;
&lt;p&gt;The first animated plot shows the changes over time where the y-axis increases as the migrant populations grow larger. It shows the evolution in the relative distributions of the origin, destination and the linking migrant corridors, in particular the relative growth of migrants in high income countries.&lt;/p&gt;
&lt;style&gt;
.carousel-indicators {
  bottom:-3%
}
.carousel-indicators &gt; li,
.carousel-indicators &gt; li.active{
    width: 40%;
    height: 2%;
    border-radius: 0;
    border: solid 1px grey;
    background: transparent;
    text-indent: 0;
    text-align: center;
}
.carousel-indicators &gt; li.active {
    background: #4caf50;
}
video {
  /* override other styles to make responsive */
  width: 100%    !important;
  height: auto   !important;
  max-height: 720px
}
&lt;/style&gt;
&lt;div id=&#34;carousel_free&#34; class=&#34;carousel slide&#34;&gt;
  &lt;ol class=&#34;carousel-indicators&#34;&gt;
    &lt;li data-target=&#34;#carousel_free&#34; data-slide-to=&#34;0&#34; class=&#34;active&#34;&gt;Known Origins&lt;/li&gt;
    &lt;li data-target=&#34;#carousel_free&#34; data-slide-to=&#34;1&#34;&gt;All Origins&lt;/li&gt;
  &lt;/ol&gt;
  &lt;div class=&#34;carousel-inner&#34;&gt;
    &lt;div class=&#34;carousel-item active&#34;&gt;
            &lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;abel_free.png&#34;&gt;
        &lt;source src=&#34;abel_free.mp4&#34; type=&#34;video/mp4&#34; /&gt;
      &lt;/video&gt;
    &lt;/div&gt;
    &lt;div class=&#34;carousel-item&#34;&gt;
            &lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;abel_free_unkown.png&#34;&gt;
        &lt;source src=&#34;abel_free_unknown.mp4&#34; type=&#34;video/mp4&#34; /&gt;
      &lt;/video&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;Note: you might have to right click, select show controls and hit play to start the animations depending on your browsers - right clicking can also allow you to access controls on the play back speed and save the video if you want to use it elsewhere.&lt;/p&gt;
&lt;p&gt;The second animated plot shows the changes over time where the y-axis is fixed to its maximum level. The adjustment allows the Sankey to grow into the plot space to see more clearly the changes in the overall levels of migrant populations.&lt;/p&gt;
&lt;div id=&#34;carousel_forced2&#34; class=&#34;carousel slide&#34;&gt;
  &lt;ol class=&#34;carousel-indicators&#34;&gt;
    &lt;li data-target=&#34;#carousel_forced2&#34; data-slide-to=&#34;0&#34; class=&#34;active&#34;&gt;Known Origins&lt;/li&gt;
    &lt;li data-target=&#34;#carousel_forced2&#34; data-slide-to=&#34;1&#34;&gt;All Origins&lt;/li&gt;
  &lt;/ol&gt;
  &lt;div class=&#34;carousel-inner&#34;&gt;
    &lt;div class=&#34;carousel-item active&#34;&gt;
      &lt;video loop width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;abel_fixed.png&#34;&gt;
        &lt;source src=&#34;abel_fixed.mp4&#34; type=&#34;video/mp4&#34; /&gt;
      &lt;/video&gt;
    &lt;/div&gt;
    &lt;div class=&#34;carousel-item&#34;&gt;
      &lt;video loop width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;abel_fixed_unknown.png&#34;&gt;
        &lt;source src=&#34;abel_fixed_unknown.mp4&#34; type=&#34;video/mp4&#34;/&gt;
      &lt;/video&gt; 
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;For both plots above there are alternative versions, that include an additional origin category for unknown place of birth. The values for the stock of migrants with unknown origins living in each World Bank income group are not in the main data frame in the UN excel sheet, but are in the regional aggregate sheets for each period. As a result the data importing and manipulation takes a bit of extra work (it is commented out in the Gist R script), but the plots are more &amp;lsquo;complete&amp;rsquo;, where the totals of the sectors sum to the global estimate of the UN at each time point.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Expand broom::tidy() output for categorical parameter estimates</title>
      <link>https://guyabel.com/post/tidycat/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/tidycat/</guid>
      <description>&lt;div&gt;&lt;img src=&#34;featured.png&#34; width=&#34;200px&#34; align=&#34;right&#34;&gt;&lt;/div&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;tidycat&lt;/code&gt; package includes the &lt;code&gt;tidy_categorical()&lt;/code&gt; function to expand &lt;code&gt;broom::tidy()&lt;/code&gt; outputs for categorical parameter estimates.&lt;/p&gt;
&lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;p&gt;For full documentation, see the package vignette: &lt;a href=&#34;https://cran.r-project.org/web/packages/tidycat/vignettes/intro.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The tidycat package: expand broom::tidy() output for categorical parameter estimates&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;hello-world&#34;&gt;Hello World&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;tidy()&lt;/code&gt; function in the broom package takes the messy output of built-in functions in R, such as &lt;code&gt;lm()&lt;/code&gt;, and turns them into tidy data frames.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)
library(broom)

m1 &amp;lt;- mtcars %&amp;gt;%
  mutate(transmission = recode_factor(am, `0` = &amp;quot;automatic&amp;quot;, `1` = &amp;quot;manual&amp;quot;)) %&amp;gt;%
  lm(mpg ~ transmission + wt *  as.factor(cyl), data = .)

tidy(m1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7 x 5
##   term               estimate std.error statistic       p.value
##   &amp;lt;chr&amp;gt;                 &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt;
## 1 (Intercept)          41.5        4.54     9.14  0.00000000190
## 2 transmissionmanual   -0.902      1.51    -0.595 0.557        
## 3 wt                   -6.19       1.65    -3.75  0.000937     
## 4 as.factor(cyl)6      -8.66      10.4     -0.836 0.411        
## 5 as.factor(cyl)8     -16.9        5.27    -3.20  0.00374      
## 6 wt:as.factor(cyl)6    2.12       3.40     0.625 0.538        
## 7 wt:as.factor(cyl)8    3.84       1.77     2.17  0.0399
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;tidy_categorical()&lt;/code&gt; function adds&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;further columns (&lt;code&gt;variable&lt;/code&gt;, &lt;code&gt;level&lt;/code&gt; and &lt;code&gt;effect&lt;/code&gt;) to the &lt;code&gt;broom::tidy()&lt;/code&gt; output to help manage categorical variables&lt;/li&gt;
&lt;li&gt;further rows for reference category terms and a column to indicate their location (&lt;code&gt;reference&lt;/code&gt;) when setting &lt;code&gt;include_reference = TRUE&lt;/code&gt; (default)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It requires two inputs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a data frame &lt;code&gt;d&lt;/code&gt; of parameter estimates from a model from &lt;code&gt;broom::tidy()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the corresponding model object &lt;code&gt;m&lt;/code&gt; passed to &lt;code&gt;broom::tidy()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidycat)
d1 &amp;lt;- m1 %&amp;gt;%
  tidy(conf.int = TRUE) %&amp;gt;%
  tidy_categorical(m = m1)
d1 %&amp;gt;%
  select(-(3:5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 8
##    term      estimate conf.low conf.high variable    level  effect  reference   
##    &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;       &amp;lt;fct&amp;gt;  &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       
##  1 (Interce~   41.5     32.1       50.8  (Intercept) (Inte~ main    Non-Baselin~
##  2 &amp;lt;NA&amp;gt;         0        0          0    transmissi~ autom~ main    Baseline Ca~
##  3 transmis~   -0.902   -4.02       2.22 transmissi~ manual main    Non-Baselin~
##  4 wt          -6.19    -9.59      -2.79 wt          wt     main    Non-Baselin~
##  5 &amp;lt;NA&amp;gt;         0        0          0    as.factor(~ 4      main    Baseline Ca~
##  6 as.facto~   -8.66   -30.0       12.7  as.factor(~ 6      main    Non-Baselin~
##  7 as.facto~  -16.9    -27.7       -6.00 as.factor(~ 8      main    Non-Baselin~
##  8 &amp;lt;NA&amp;gt;         0        0          0    wt:as.fact~ 4      intera~ Baseline Ca~
##  9 wt:as.fa~    2.12    -4.87       9.12 wt:as.fact~ 6      intera~ Non-Baselin~
## 10 wt:as.fa~    3.84     0.192      7.50 wt:as.fact~ 8      intera~ Non-Baselin~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The expanded data frame from &lt;code&gt;tidy_categorical()&lt;/code&gt; of parameter estimates can be particularly useful for creating coefficient plots, allowing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grouping terms from the same categorical variable from the additional columns.&lt;/li&gt;
&lt;li&gt;inclusion of reference categories in a coefficient plot from the additional rows, allowing the reader to better grasp the meaning of the parameter estimates in each categorical variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(forcats)
library(ggplot2)
library(ggforce)

d1 %&amp;gt;%
  slice(-1) %&amp;gt;%
  mutate(variable = fct_inorder(variable)) %&amp;gt;%
  ggplot(mapping = aes(x = level, y = estimate, colour = reference,
                       ymin = conf.low, ymax = conf.high)) +
  facet_row(facets = &amp;quot;variable&amp;quot;, scales = &amp;quot;free_x&amp;quot;, space = &amp;quot;free&amp;quot;) +
  geom_hline(yintercept = 0, linetype = &amp;quot;dashed&amp;quot;) +
  geom_pointrange()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://guyabel.com/post/tidycat/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can install the released version of tidycat from &lt;a href=&#34;https://CRAN.R-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRAN&lt;/a&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;tidycat&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the development version from &lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;guyabel/tidycat&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Global migrant populations visualized using animated chord diagrams </title>
      <link>https://guyabel.com/post/global-migrant-chord-diagrams/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/global-migrant-chord-diagrams/</guid>
      <description>&lt;p&gt;Over the last year or so I have been playing around with different ways of showing changing global bilateral migrant stocks, adapting the animation code I created for the plots for region to region flows in this estimation &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paper&lt;/a&gt;. I am putting them online here in case they are of interest to anyone else. Feel free to download the plots using right click over the animation and then &lt;code&gt;Save Video as&lt;/code&gt; or from &lt;a href=&#34;https://github.com/guyabel/personal-site/tree/main/content/post/global-migrant-chord-diagrams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;global-migrant-populations-from-1990-to-2020&#34;&gt;Global migrant populations from 1990 to 2020&lt;/h2&gt;
&lt;p&gt;The first plot below shows the change over time in the pattern of global migrant stocks. As with the &lt;a href=&#34;http://guyabel.com/post/migrant-stock-chord-digrams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;regional plots&lt;/a&gt; in my previous post, the chords in the diagrams represent the connection between the places of birth (at the base of the chord) and places of residence (at the arrow head of the chord). The width of based of the chords correspond to the size of the migrant population in millions. Chords are ordered relative to their size, with the largest migrant stocks plotted at the beginning of the region segments. The ordering of chords jumps around over time as the relative rankings of the largest foreign-born populations change in each region. Values for the migrant population sizes are from the &lt;del&gt;2019&lt;/del&gt; 2020 revision of the United Nations DESA &lt;a href=&#34;https://www.un.org/development/desa/pd/content/international-migrant-stock&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;International Migrant Stock Data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: you might have to right click, select show controls and hit play to start the animations depending on your browsers - right clicking can also allow you to access controls on the play back speed.&lt;/p&gt;
&lt;style&gt;
video {
  /* override other styles to make responsive */
  width: 100%    !important;
  height: auto   !important;
  max-height: 720px
}
&lt;/style&gt;
&lt;video loop=&#34;loop&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;area-time-abel.png&#34;&gt;
  &lt;source src=&#34;area-time-abel.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;h2 id=&#34;male-and-female-migrant-populations&#34;&gt;Male and female migrant populations&lt;/h2&gt;
&lt;p&gt;The next two plots below show the differences between male and female global migrant distributions in 2020. In the first plot I keep the sector axis fixed at their maximums (over both sexes) making it easier to detect changes in the relative volume of a particular migrant corridor; for example the greater number of male migrants in West Asia and slightly more female migrants in North America.&lt;/p&gt;
&lt;video loop=&#34;loop&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;area-sex1-abel.png&#34;&gt;
  &lt;source src=&#34;area-sex1-abel.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;p&gt;In the second plot, I allow the sector axis to be specific to the regional totals. This (perhaps?) makes it easier to detect relative changes in the overall global patterns by sex.&lt;/p&gt;
&lt;video loop=&#34;loop&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;area-sex2-abel.png&#34;&gt;
  &lt;source src=&#34;area-sex2-abel.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;p&gt;&lt;a id=&#34;population&#34;&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;migrant-populations-relative-to-total-populations&#34;&gt;Migrant populations relative to total populations&lt;/h2&gt;
&lt;p&gt;One important feature of international migrants are their relative rarity. Professor Hein de Haas visually illustrates this point neatly using a &lt;a href=&#34;http://heindehaas.blogspot.com/2016/08/refugees-small-and-relatively-stable.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pie chart&lt;/a&gt;, where his focus is predominantly on refugees, but also clearly shows the small share of the global population that are living outside their country of birth (under 4%). This feature is completely missed in the migrant chord diagrams above, where there is no way to gauge the share of the migrant populations relative to the total population.
In the plot below I tried to illustrate the relative sizes of migrant populations using the lengths of the sector axis, transitioning between&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The number of migrants (which is a combination of migrant living in the region and migrants born in the region living elsewhere) as in the plots above, and&lt;/li&gt;
&lt;li&gt;The total population of the region.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The chord widths remain constant, fixed at the size of the bilateral migrant populations.&lt;/p&gt;
&lt;video loop=&#34;loop&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;area-pop-abel.png&#34;&gt;
  &lt;source src=&#34;area-pop-abel.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;p&gt;&lt;a id=&#34;forced&#34;&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;refugee-populations-relative-to-total-migrant-populations&#34;&gt;Refugee populations relative to total migrant populations&lt;/h2&gt;
&lt;p&gt;In the final plots I illustrate the relative sizes of forced migrant populations compared to the total migrant populations, transitioning the chords between&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The number of migrants from each origin and destination based on the UN IMS2020 stock data&lt;/li&gt;
&lt;li&gt;The number of forced migrants from each origin and destination based on data from &lt;a href=&#34;https://www.unhcr.org/refugee-statistics/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UNHCR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the first version the sector axis remain constant, fixed at the size of the bilateral migrant populations in each region.&lt;/p&gt;
&lt;video loop=&#34;loop&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;area-forced1-abel.png&#34;&gt;
  &lt;source src=&#34;area-forced1-abel.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;p&gt;In the second plot the sector axis vary to match the type of migrants (all migrants or forced migrants) so show the relative differences in patterns.&lt;/p&gt;
&lt;video loop=&#34;loop&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;area-forced2-abel.png&#34;&gt;
  &lt;source src=&#34;area-forced2-abel.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;h2 id=&#34;r-code&#34;&gt;R Code&lt;/h2&gt;
&lt;p&gt;These plots were all produced in R, primarily using the &lt;code&gt;chordDiagram()&lt;/code&gt; function in the  &lt;a href=&#34;https://jokergoo.github.io/circlize_book/book/the-chorddiagram-function.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;circlize&lt;/a&gt; package. A while ago I wrote a &lt;a href=&#34;http://guyabel.com/post/animated-directional-chord-diagrams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;post&lt;/a&gt; with details on creating animated chord diagrams. The specific code for the plots above gets a bit overwhelming (and is poorly commented) so I am hesitant to put it online, especially because the more complicated parts for defining the lines for the global regions can now be done much more easily using the new &lt;code&gt;group&lt;/code&gt; argument in the &lt;code&gt;chordDiagram()&lt;/code&gt; function, as described in a recent &lt;a href=&#34;https://jokergoo.github.io/2020/06/08/multiple-group-chord-diagram/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;post&lt;/a&gt; by the circlize package creator Zuguang Gu.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bilateral international migration flow estimates for 200 countries</title>
      <link>https://guyabel.com/publication/bilateral-international-migration-flow-estimates/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/publication/bilateral-international-migration-flow-estimates/</guid>
      <description>&lt;script src=&#34;https://guyabel.com/publication/bilateral-international-migration-flow-estimates/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://guyabel.com/publication/bilateral-international-migration-flow-estimates/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://guyabel.com/publication/bilateral-international-migration-flow-estimates/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://guyabel.com/publication/bilateral-international-migration-flow-estimates/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://guyabel.com/publication/bilateral-international-migration-flow-estimates/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://guyabel.com/publication/bilateral-international-migration-flow-estimates/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;
&lt;div style=&#34;display:inline-block; vertical-align:top&#34;&gt;
&lt;div class=&#34;altmetric-embed&#34; data-doi=&#34;10.1038/s41597-019-0089-3&#34; data-badge-type=&#34;medium-donut&#34; data-hide-no-mentions=&#34;true&#34; data-badge-popover=&#34;right&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&#34;display: inline-block&#34;&gt;
&lt;div class=&#34;__dimensions_badge_embed__&#34; data-doi=&#34;10.1038/s41597-019-0089-3&#34; data-hide-zero-citations=&#34;true&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;updates&#34;&gt;Updates&lt;/h2&gt;
&lt;p&gt;Since the paper was published, I have produced seven updates to reflect&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The latest United Nations demographic data released in WPP2019, WPP2022 and WPP2024 (July 19, 2019, 28 October, 2022 and 30 October and 2024)&lt;/li&gt;
&lt;li&gt;The latest United Nations migrant stock data released in IMS2019 and IMS2020 (October 23, 2019 and February 1, 2021)&lt;/li&gt;
&lt;li&gt;Corrections for Serbia, Montenegro, Sudan and South Sudan in earlier periods (August 3, 2020)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the table of contents to jump to a short discussion on each update. The different versions of estimates are all available on &lt;a href=&#34;https://figshare.com/articles/dataset/Bilateral_international_migration_flow_estimates_for_200_countries_1990-1995_to_2010-2015_/7731233&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figshare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;WPP2019&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;version-2-update-for-wpp2019&#34;&gt;Version 2: Update for WPP2019&lt;/h2&gt;
&lt;p&gt;This paper came out a day before the United Nations Population Division updated their &lt;a href=&#34;https://population.un.org/wpp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;World Population Prospects&lt;/a&gt; (WPP). As all the estimates were based on WPP2017 our claim for the estimates being based on the most up to date input data was only true for around 24 hours.&lt;/p&gt;
&lt;p&gt;In order to keep the estimates a bit more current I have added new version based on the WPP2019 to the &lt;a href=&#34;https://figshare.com/collections/Bilateral_international_migration_flow_estimates_for_200_countries/4470464&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figshare collection&lt;/a&gt;. Below is a quick summary of the changes in the updated estimates to those in the paper.&lt;/p&gt;
&lt;h4 id=&#34;comparison-to-past-estimates-based-on-wpp2017-and-wpp2019&#34;&gt;Comparison to past estimates based on WPP2017 and WPP2019&lt;/h4&gt;
&lt;p&gt;The plot below shows the relationship between the bilateral flow estimates based on WPP2017 and WPP2019 from each period and estimation method.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v2-compare.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;For the stock differencing methods there are no changes in the estimates. They do not rely on WPP data. The migration rates approach uses the total absolute net migration data from WPP. All bilateral flows from WPP2019 are slightly higher than their WPP2017 counterparts, though it is barely noticeable in the plot above. The demographic accounting methods use the birth, death and population estimates from the WPP. In each method there are some sizable differences for the flows generated by updated revisions to the WPP demographic data, in particular for those based on the closed demographic accounting approach.&lt;/p&gt;
&lt;p&gt;These difference results in revisions to the overall totals of migration flows. Below is an animation of the changes to &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 2&lt;/a&gt; in the paper&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v2-est_tot.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;From this plot it is easier to see the changes in the migration rates estimation method. I was surprised that the changes in the estimates were occurring in all periods, not just the most recent period (2010-2015). To investigate I took a look at the changes in the WPP data.&lt;/p&gt;
&lt;h4 id=&#34;which-countries-are-most-affected&#34;&gt;Which countries are most affected?&lt;/h4&gt;
&lt;p&gt;The countries where the largest changes in the bilateral estimates occurred (from the closed demographic accounting methods) can be detected by looking at the revisions in net migration between WPP2017 and WPP2019. Net migration is the best measure to track their changes as it correlates perfectly with the net migration in the WPP and is the residual of the input data (births, deaths and population) for the estimates based on the demographic accounting methods. Below are the changes in the complete time series of net migration in nine countries where the largest absolute differences (in any period) between the two WPP versions occur.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v2-wpp_big_changes.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;At first, I was a bit surprised by the scale of the changes. In some periods the revisions to net migration are greater than a million. I dug a little deeper into net migration in previous WPP revisions to find that similar revisions are not unusual. Below are the revisions of absolute net migration between past WPP versions that exceed one million (back to WPP2000, the earliest WPP data I can get my hands on).&lt;/p&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:100%;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-2.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;h4 id=&#34;impact-on-validation-exercise&#34;&gt;Impact on validation exercise&lt;/h4&gt;
&lt;p&gt;The impact of the revision in WPP data on the validation exercise in the paper is minimal. Below is an update of &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 4&lt;/a&gt; in the paper.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v2-val_all.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The correlations change by few hundredths of a decimal. These small changes, despite what is shown in the first plot above, are due to the limited amount of reported migration flows statistics (at the global level) to carry out our validation exercise. In the 45 countries that we used (based on the United Nations Population Division &lt;a href=&#34;https://www.un.org/en/development/desa/population/migration/data/empirical2/migrationflows.asp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;collection&lt;/a&gt;) the revisions in the WPP data were relatively minor, hence only small changes in their estimates and the correlations with the reported data.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;IMS2019&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;version-3-update-for-ims2019&#34;&gt;Version 3: Update for IMS2019&lt;/h2&gt;
&lt;p&gt;Another update in the input data came out a few weeks back - this time the UN &lt;a href=&#34;https://www.un.org/en/development/desa/population/migration/data/estimates2/estimates19.asp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;International Migrant Stock&lt;/a&gt; (IMS) data. I have added another set of flow estimates based on the IMS2019 and WPP2019 to the &lt;a href=&#34;https://figshare.com/collections/Bilateral_international_migration_flow_estimates_for_200_countries/4470464&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figshare collection&lt;/a&gt; (the original flow estimates in the paper were based on IMS2017). I do not expect there will not be a need to update the estimates again until at least 2021.&lt;/p&gt;
&lt;p&gt;Below are a few plots to give some visual summaries of the changes in the updated estimates to those in the paper and from the last update.&lt;/p&gt;
&lt;h4 id=&#34;comparison-to-past-estimates&#34;&gt;Comparison to past estimates&lt;/h4&gt;
&lt;p&gt;The plot below shows the relationship between the bilateral flow estimates based on IMS2017 and WPP2017 (as in the paper) and IMS2019 - WPP2019 (this update) from each period and estimation method.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v3-compare.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In all methods (columns) there are changes some the estimates, which tend to be larger in more recent periods (lower rows) and estimation methods based on demographic accounting (columns to the right). These patterns are likely due to larger revisions in the most recent stock data and the use of updated demographic data in the demographic accounting methods - not required in the stock differencing approaches.&lt;/p&gt;
&lt;p&gt;The revisions to the overall totals of migration flows, shown in &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 2&lt;/a&gt; in the paper, are animated below, transitioning from 1) the estimates in the paper to 2) the first update of the estimates from changes in the demographic data to 3) the most recent update for changes in the stock data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v3-est_tot.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The 2010-2015 estimates are, on the whole, suggesting that the total global flows remained at similar levels to 2005-2010. Earlier versions of the estimates had suggested a decline. As a result the crude global migration rate falls by only a small margin for most estimation methods during 2010-2015, except for Pseudo-Bayesian estimates of flows where the rate increases a touch.&lt;/p&gt;
&lt;h4 id=&#34;which-countries-are-most-affected-1&#34;&gt;Which countries are most affected?&lt;/h4&gt;
&lt;p&gt;The largest changes in the bilateral flow estimates can be partially detected by looking at the revisions in migrant stock data between IMS2017 and IMS2019. In the stock differencing methods these changes are directly related to the change in the estimated flow sizes between the bilateral country pair. In the demographic accounting approaches the impact of the revision is less direct on the estimated flows, as each method allows for return and on-wards migration to match changes in migrant stock data. Below is scatter plot of the changes in the IMS data by continent.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v3-tims_change.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;There are a few features to note. First, and unsurprisingly, the largest revisions are occurring in the most recent data (2015). Second, the biggest changes are in North American data sources. Below is a table of the bilateral pairs where the revision to the migrant stocks is greater than 100,000. Third, in some areas there are noticeable patterns to the changes - the diagonal lines parallel to the &lt;code&gt;\(y=x\)&lt;/code&gt; line - which I guess is related to updates in the data used to imputation missing bilateral stocks.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:100%;height:100%;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-4.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;h4 id=&#34;impact-on-validation-exercise-1&#34;&gt;Impact on validation exercise&lt;/h4&gt;
&lt;p&gt;The impact of the revision in stock data on the validation exercise in the paper is slightly larger than the previous update, but still not very dramatic. Below is an animated version of &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 4&lt;/a&gt; in the paper, showing the correlations between the flow estimates and reported data for various migration measures, for the original estimates and subsequent updates based on new WPP and IMS data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v3-val_all.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;As with the first update, the small changes in the correlations, despite some large revisions in the migrant stock data are due to the limited amount of reported migration flows statistics (at the global level) to carry out our validation exercise.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;SCGSUD&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;version-4-correct-for-serbia-montenegro-sudan-and-south-sudan-before-2005&#34;&gt;Version 4: Correct for Serbia, Montenegro, Sudan and South Sudan before 2005&lt;/h2&gt;
&lt;p&gt;In the original paper, and updates described above, both Serbia and Montenegro, and Sudan and South Sudan are treated as separate countries through the entire 1990 to 2015 period. This was not a great choice. Although the UN provide separate demographic and migrant stock data for each of the four countries back to 1990, the notes in the migrant stock spreadsheet (number 4 and 24) point out that the foreign-born data for Sudan and Serbia before 2005 cover South Sudan and Montenegro respectively. In both South Sudan and Montenegro before 2005 there is no data provided for the foreign-born populations.&lt;/p&gt;
&lt;p&gt;The differences in geographic coverage of Sudan and Serbia in the migrant stock data has an impact on the flow estimates that are based on the differences in stocks. For example, the demographic accounting-based methods were trying to calibrate changes in foreign born stocks (from zero in 1990 to zero in 1995 for example) in South Sudan and Montenegro with a non-zero net migration over the period. This was resolved in the background by some parts of the IPF code running until their default iteration limit rather than until convergence, where convergence was not feasible. I picked up on this when adding some new warning messages in the &lt;code&gt;ffs_demo()&lt;/code&gt; function of the &lt;a href=&#34;https://cran.r-project.org/web/packages/migest/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;migest&lt;/a&gt; package which should now alert users for non-convergence.&lt;/p&gt;
&lt;p&gt;To rectify this problem, I have created a new version of the estimates that treat Serbia and Montenegro, and Sudan and South Sudan, as single countries before 2010-2015. This reduces the number of countries in the earlier periods of the data to 198, there is still 200 countries, and the estimates are the same as in the previous update. I use the SCG and SUD country codes for Serbia and Montenegro and Sudan before 2010-2015, and the four separate country codes during 2010-2015 and after (SRB, MNE, SDN, SSD as in previous versions).&lt;/p&gt;
&lt;p&gt;I have added a few plots below to once again give some summaries of the changes in the updated estimates to those in the paper and from the last update.&lt;/p&gt;
&lt;h4 id=&#34;comparison-to-past-estimates-1&#34;&gt;Comparison to past estimates&lt;/h4&gt;
&lt;p&gt;The plot below shows the relationship between the bilateral flow estimates based on the last update based on IMS2019 and WPP2019 and the newer estimates with the correction for the four countries.&lt;/p&gt;
&lt;!-- In all periods the estimates for 2005-2010 and 2010-2015 remain unchanged, hence all points are on the diagonal line. In earlier periods there are a small number of bilateral estimates from the rates and demographic accounting methods. For the demographic accounting methods this is due to the combining of data for the four countries allowing the IPF routines to fully converge. The biggest changes occur in estimates between African countries from the correction to Sudanese and South Sudanese born populations. For the rates method all estimates are revised from the change in the global migration flow total, obtained from the sum of net migration flows.  --&gt;
&lt;!-- ![ ](v4-compare.png) --&gt;
&lt;h4 id=&#34;impact-on-validation-exercise-2&#34;&gt;Impact on validation exercise&lt;/h4&gt;
&lt;p&gt;The impact of the correction for the four countries on the validation exercise is very minor. Below is an animated version of &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 4&lt;/a&gt; in the paper, showing the correlations between the flow estimates and reported data for various migration measures, for the original estimates, the previous updates based on new WPP and IMS data and the new estimates with a correction for the four countries prior to 2010-2015.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v4-val_all.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;IMS2020&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;version-5-update-for-ims2020&#34;&gt;Version 5: Update for IMS2020&lt;/h2&gt;
&lt;p&gt;The new UN &lt;a href=&#34;https://www.un.org/development/desa/pd/content/international-migrant-stock&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;International Migrant Stock&lt;/a&gt; (IMS) data came out a few weeks back. I have added another set of flow estimates based on the IMS2020 and WPP2019 to the &lt;a href=&#34;https://figshare.com/collections/Bilateral_international_migration_flow_estimates_for_200_countries/4470464&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figshare collection&lt;/a&gt; (the original flow estimates in the paper were based on IMS2017). As the IMS2020 contain bilateral stocks for 2020, it was possible to generate a first set of flow estimates for the 2015-2020 period, shown at the end of the animation below for estimates based on one of the methods covered in the paper:&lt;/p&gt;
&lt;style&gt;
video {
  /* override other styles to make responsive */
  width: 100%    !important;
  height: auto   !important;
  max-height: 720px
}
&lt;/style&gt;
&lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; poster=&#34;v5-flow.png&#34; controls&gt;
&lt;source src=&#34;v5-flow.mp4&#34; type=&#34;video/mp4&#34; /&gt;
&lt;/video&gt;
&lt;p&gt;Below are a few plots to give some visual summaries of the changes in the estimates compared to previous versions.&lt;/p&gt;
&lt;h4 id=&#34;comparison-to-past-estimates-2&#34;&gt;Comparison to past estimates&lt;/h4&gt;
&lt;!-- The plot below shows the relationship between the bilateral flow estimates based on IMS2019 and WPP2019 (previous update) and IMS2019 - WPP2019 (this update) from each period and estimation method. --&gt;
&lt;!-- ![ ](v5-compare.png) --&gt;
&lt;!-- As with the previous updates, all methods (columns) see some changes in the flows estimates, which tend to be larger in more recent periods (lower rows) and estimation methods based on demographic accounting (columns to the right).  --&gt;
&lt;p&gt;The plot of the totals migration flows, shown in &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 2&lt;/a&gt; in the paper, is updated below with the new estimates, including the new values for the 2015-2020.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v5-est_tot4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The estimates in the new 2015-2020 period see a continued slow in the growth of total flows based on estimates using the Pseudo-Bayesian method. The other demographic accounting methods also see a small increase in the estimated total flows during 2015-2020 from 2010-2015. There is a noticeable decline in the total flows during 2015-2020 estimated using the rates approach and incline from the stock differencing methods. I suspect all the estimates for 2015-2020 will see some major changes from future revisions of the IMS data, as data drips in from the 2020 round of censuses that will alter the stocks and demographic used as input data to estimate flows in the most recent periods.&lt;/p&gt;
&lt;p&gt;The evolution of the changes in the estimates from different revisions in the input data can be seen below; transitioning from 1) the estimates in the paper to 2) the first update (version 2) of the estimates from changes in the demographic data to 3) the second update for changes in the stock data (version 4) to the most recent update (version 5, the same as the plot above).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v5-est_tot.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;impact-on-validation-exercise-3&#34;&gt;Impact on validation exercise&lt;/h4&gt;
&lt;p&gt;The impact of the revision in stock data on the validation exercise in the paper is still relatively minor. Below is an update of the animated version of &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 4&lt;/a&gt; in the paper, showing the correlations between the flow estimates and reported data for various migration measures, for the original estimates and subsequent updates based on new WPP and IMS data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v5-val_all.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;As with the other updates, the small changes in the correlations, despite some large revisions in the migrant stock data are due to the limited amount of reported migration flows statistics (at the global level) to carry out our validation exercise. The estimates during 2015-2020 have no influence due to the lack of corresponding reported flow data in the UN collection.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;WPP2022&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;version-6-update-for-wpp2022&#34;&gt;Version 6: Update for WPP2022&lt;/h2&gt;
&lt;p&gt;The new UN &lt;a href=&#34;https://population.un.org/wpp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;World Population Prospects&lt;/a&gt; (WPP) data came out a few months back. I have added another set of flow estimates based on the IMS2020 and WPP2022 to the &lt;a href=&#34;https://figshare.com/collections/Bilateral_international_migration_flow_estimates_for_200_countries/4470464&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figshare collection&lt;/a&gt; (the original flow estimates in the paper were based on IMS2017 and WPP2017). The WPP2022 contain data on births and deaths in many more countries (mostly small countries and territories) than previous versions, allowing estimates of migration flows between 229 countries, compared to the 200 in previous versions.&lt;/p&gt;
&lt;p&gt;Towards the start of this year our paper based on sex-specific flow estimates was published in &lt;a href=&#34;https://www.nature.com/articles/s41597-022-01271-z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scientific Data&lt;/a&gt;. The updated flow estimates based on the WPP2022 data, also expanded to 229 countries, are in a separate &lt;a href=&#34;https://figshare.com/collections/Bilateral_international_migration_flow_estimates_by_sex/5800838&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figshare collection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The WPP data are now annual, running between 1st January and 31st December for each measure. This differs to the migrant stock data that are aligned at the 1st July in five-year intervals. Consequently, I had to do some extra coding to interpolate the WPP2022 demographic data to five-year summary measures that match the intervals in the migrant stock data and obtain the five-year flow estimates.&lt;/p&gt;
&lt;p&gt;Below are a few plots to give some visual summaries of the new estimates and their changes relative to previous versions alongside some discussion.&lt;/p&gt;
&lt;h4 id=&#34;comparison-to-past-estimates-3&#34;&gt;Comparison to past estimates&lt;/h4&gt;
&lt;p&gt;The plot of the totals migration flows, shown in &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 2&lt;/a&gt; in the paper, is updated below with the new estimates, including the 30 odd extra new countries included in the estimates from the expanded data availability in WPP2022 input data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v6-tot5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The evolution of the changes in the estimates from different revisions in the input data can be seen below; transitioning from 1) the estimates in the paper to 2) the first update (version 2) of the estimates from changes in the demographic data to 3) the second and third updates for changes in the stock data (version 4 and 5) to the 5) most recent update (version 6, the same as the plot above).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v6-tot.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The latest rise in the level of the estimates from the demographic accounting and migration rates methods are a result of two big changes 1) the expanded set of countries and 2) some dramatic revisions in the birth, death and population data in WPP2022 compared to WPP2019. The changes in the demographic data and their impact on the estimated migration flows can be best viewed from inspecting the biggest changes in net migration between WPP2019 and WPP2022.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v6-wpp_big_changes.png&#34; alt=&#34;&#34;&gt;
Some of the revisions in net migration are on a much larger scale than the &lt;a href=&#34;#WPP2019&#34;&gt;previous changes&lt;/a&gt; between WPP2017 and WPP2019. Pakistan, where the largest revision occurs, has a net migration loss in WPP2022 of over 7 million in the last two five-year periods. In WPP2019 in the same periods the net migration loss was just over 1 million. I am not sure if the revised WPP2022 values are plausible? In any case, these revisions have big impacts for the bilateral flow estimates, especially those based on the closed demographic accounting methods which are implicitly constrained to match the WPP net migration.&lt;/p&gt;
&lt;h4 id=&#34;impact-on-validation-exercise-4&#34;&gt;Impact on validation exercise&lt;/h4&gt;
&lt;p&gt;The impact of the revision in WPP data on the validation exercises is more pronounced than in any other updates so far. Below is an update of the animated version of &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 4&lt;/a&gt; in the paper, showing the correlations between the flow estimates and reported data for various migration measures, for the original estimates and subsequent updates based on new WPP and IMS data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v6-val_all.gif&#34; alt=&#34;&#34;&gt;
There biggest changes are the drops in the correlations for the estimates based on demographic accounting approaches, especially in the immigration and emigration rate measures. The general ordering of preferences between the estimates from different methods, based on the highest levels of correlation, remain unchanged.&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;WPP2024&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;version-7-update-for-wpp2024&#34;&gt;Version 7: Update for WPP2024&lt;/h2&gt;
&lt;p&gt;The latest UN &lt;a href=&#34;https://population.un.org/wpp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;World Population Prospects&lt;/a&gt; (WPP) data came out during the summer. I have updated the flow estimates in the the &lt;a href=&#34;https://figshare.com/collections/Bilateral_international_migration_flow_estimates_for_200_countries/4470464&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figshare collection&lt;/a&gt; based on the IMS2020 and WPP2024 (the original flow estimates in the paper were based on IMS2017 and WPP2017). There is one additional country/territory in this edition of the flow estimates, formed from combining the Guernsey and Jersey data in WPP2024 to match the Channel Islands data in the migrant stock data (IMS2020). I have also updated the &lt;a href=&#34;https://www.nature.com/articles/s41597-022-01271-z&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sex-specific&lt;/a&gt; flow estimates for WPP2024 in the separate &lt;a href=&#34;https://figshare.com/collections/Bilateral_international_migration_flow_estimates_by_sex/5800838&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figshare collection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Below is some plots and discussion on the new estimates and their changes relative to previous versions, starting with an animated chord diagram of the updated region to region flow estimates over time:&lt;/p&gt;
&lt;style&gt;
video {
  /* override other styles to make responsive */
  width: 100%    !important;
  height: auto   !important;
  max-height: 720px
}
&lt;/style&gt;
&lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; poster=&#34;v7-flow.png&#34; controls&gt;
&lt;source src=&#34;v7-flow.mp4&#34; type=&#34;video/mp4&#34; /&gt;
&lt;/video&gt;
&lt;h4 id=&#34;comparison-to-past-estimates-4&#34;&gt;Comparison to past estimates&lt;/h4&gt;
&lt;p&gt;The plot of the totals migration flows, shown in &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 2&lt;/a&gt; in the paper, is updated below with the new estimates&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v7-tot6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The evolution of the changes in the estimates from different revisions in the input data can be seen below; transitioning from 1) the estimates in the paper to 2) the first update (version 2) of the estimates from changes in the demographic data to 3) the second and third updates for changes in the stock data (version 4 and 5) to the 5) updates based on WPP2022 and WPP2024 (version 7, the same as the plot above).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v7-tot.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The further rise in the level of the estimates from the demographic accounting and migration rates methods are a result some dramatic revisions in the birth, death and population data in WPP2024 compared to WPP2022. As in the previous update, the changes in the demographic data and their impact on the estimated migration flows can be best viewed from inspecting the biggest changes in net migration between WPP2019 and WPP2022, which are implied constraints in the demographic accounting flow estimation procedures.&lt;/p&gt;
&lt;style&gt;
.carousel-indicators {
  bottom:-3%
}
.carousel-indicators &gt; li,
.carousel-indicators &gt; li.active{
    width: 40%;
    height: 2%;
    border-radius: 0;
    border: solid 1px grey;
    background: transparent;
    text-indent: 0;
    text-align: center;
}
.carousel-indicators &gt; li.active {
    background: #4caf50;
}
&lt;/style&gt;
&lt;p&gt;
&lt;div id=&#34;carousel_img&#34; class=&#34;carousel slide&#34;&gt;&lt;/p&gt;
  &lt;ol class=&#34;carousel-indicators&#34;&gt;
    &lt;li data-target=&#34;#carousel_img&#34; data-slide-to=&#34;0&#34; class=&#34;active&#34;&gt;Annual Data&lt;/li&gt;
    &lt;li data-target=&#34;#carousel_img&#34; data-slide-to=&#34;1&#34;&gt;Five-Year Equivalent&lt;/li&gt;
  &lt;/ol&gt;
  &lt;div class=&#34;carousel-inner&#34;&gt;
    &lt;div class=&#34;carousel-item active&#34;&gt;
      &lt;img src=&#34;v7-wpp_annual_big_changes.png&#34;&gt;
    &lt;/div&gt;
    &lt;div class=&#34;carousel-item&#34;&gt;
      &lt;img src=&#34;v7-wpp_big_changes.png&#34;&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;As with the last update, the revisions in net migration are on a much larger scale than the &lt;a href=&#34;#WPP2019&#34;&gt;previous changes&lt;/a&gt; between WPP2017 and WPP2019. For Bangladesh, where the largest revision occurs, has a net migration loss in WPP2024 is approximately 5 million in the last two five-year periods (2010-2015 and 2015-2020). In WPP2022, in the same periods, the net migration loss was just over 1 million. The UN DESA provide no information on such big revisions, and it remains to be seen if they will coincide with rises in Bangladeshi born populations abroad in forthcoming migrant stock data. Other large revisions are noticeable in other major migration sending and receiving countries between 1990 and 2020. The revisions in the demographic data have sizable impacts for the bilateral flow estimates, especially those based on the closed demographic accounting methods which are implicitly constrained to match the WPP net migration.&lt;/p&gt;
&lt;h4 id=&#34;impact-on-validation-exercise-5&#34;&gt;Impact on validation exercise&lt;/h4&gt;
&lt;p&gt;Below is an update of the animated version of &lt;a href=&#34;https://www.nature.com/articles/s41597-019-0089-3#Fig4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Figure 4&lt;/a&gt; in the paper, showing the correlations between the flow estimates and reported data for various migration measures, for the original estimates and subsequent updates based on new WPP and IMS data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;v6-val_all.gif&#34; alt=&#34;&#34;&gt;
The biggest changes, compared with the previous update, are correlations for the net migration data with the net migration estimates based on stock differencing approaches. The general ordering of preferences between the estimates from different methods, based on the highest levels of correlation, remain unchanged.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R code for chord diagrams of Chinese internal migration</title>
      <link>https://guyabel.com/post/chinese-migration-chord-diagram/</link>
      <pubDate>Mon, 04 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/chinese-migration-chord-diagram/</guid>
      <description>&lt;p&gt;We have had a number of requests for the R code to replicate the plots in our &lt;a href=&#34;https://guyabel.com/publication/china-internal-migration-2010-15/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paper&lt;/a&gt; on internal migration in China. The code below will produce a similar looking plot, but I have taken out some of the arguments that were very specific to our plot that will not replicate well for other data.&lt;/p&gt;
&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;
&lt;p&gt;The code is based on two data sets:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Bilateral flow data with three columns only (origin, destination and flow), see &lt;a href=&#34;https://gist.github.com/guyabel/c24d990abc2c692f2b63747ee42909eb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for the file used below&lt;/li&gt;
&lt;li&gt;Region details used for plotting, see &lt;a href=&#34;https://gist.github.com/guyabel/2f52e1593ad951800d83530a58ce0079&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; for the file used below&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note, the names in the region data are the same as the ones used in the origin and destination data.&lt;/p&gt;
&lt;p&gt;We can read in the data using &lt;code&gt;read_csv()&lt;/code&gt; in the readr package&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyverse)

d1 &amp;lt;- read_csv(&amp;quot;https://gist.githubusercontent.com/guyabel/c24d990abc2c692f2b63747ee42909eb/raw/6b255edee7e01ca31b856152d18ae10ad50badd5/china_flow_2010_2015.csv&amp;quot;)

d1 &amp;lt;- mutate(d1, flow = flow/1e6)
d1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 961 x 3
##    orig           dest      flow
##    &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 Beijing        Beijing 0     
##  2 Tianjin        Beijing 0.0674
##  3 Hebei          Beijing 0.864 
##  4 Shanxi         Beijing 0.225 
##  5 Inner Mongolia Beijing 0.103 
##  6 Liaoning       Beijing 0.155 
##  7 Jilin          Beijing 0.105 
##  8 Heilongjiang   Beijing 0.194 
##  9 Shanghai       Beijing 0.0266
## 10 Jiangsu        Beijing 0.111 
## # ... with 951 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 &amp;lt;- read_csv(&amp;quot;https://gist.githubusercontent.com/guyabel/2f52e1593ad951800d83530a58ce0079/raw/165843fdd4afc61e17cd7658563e573c1e74fb57/china_region_details.csv&amp;quot;)
d2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 31 x 6
##    name      region order colour    gap name_zh
##    &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  
##  1 Beijing   East       1 #B61416     2 &amp;lt;U+5317&amp;gt;&amp;lt;U+4EAC&amp;gt;   
##  2 Tianjin   East       2 #C01517     2 &amp;lt;U+5929&amp;gt;&amp;lt;U+6D25&amp;gt;   
##  3 Hebei     East       3 #CA1718     2 &amp;lt;U+6CB3&amp;gt;&amp;lt;U+5317&amp;gt;   
##  4 Shandong  East       4 #D4181A     2 &amp;lt;U+5C71&amp;gt;&amp;lt;U+4E1C&amp;gt;   
##  5 Jiangsu   East       5 #DE191B     2 &amp;lt;U+6C5F&amp;gt;&amp;lt;U+82CF&amp;gt;   
##  6 Shanghai  East       6 #E91A1C     2 &amp;lt;U+4E0A&amp;gt;&amp;lt;U+6D77&amp;gt;   
##  7 Zhejiang  East       7 #F31B1D     2 &amp;lt;U+6D59&amp;gt;&amp;lt;U+6C5F&amp;gt;   
##  8 Fujian    East       8 #FD1C1F     2 &amp;lt;U+798F&amp;gt;&amp;lt;U+5EFA&amp;gt;   
##  9 Guangdong East       9 #FF1E20     2 &amp;lt;U+5E7F&amp;gt;&amp;lt;U+4E1C&amp;gt;   
## 10 Hainan    East      10 #FF1F21     6 &amp;lt;U+6D77&amp;gt;&amp;lt;U+5357&amp;gt;   
## # ... with 21 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;plot&#34;&gt;Plot&lt;/h2&gt;
&lt;p&gt;The code below plots the chord diagram without the default labels and axis for the &lt;code&gt;chordDiagram()&lt;/code&gt; function, that are added later in the &lt;code&gt;circos.track()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(circlize)

circos.clear()
circos.par(track.margin = c(0.01, -0.01), start.degree = 90, gap.degree = d2$gap)

chordDiagram(x = d1, order = d2$name, 
             grid.col = d2$colour, transparency = 0.25,
             directional = 1, direction.type = c(&amp;quot;diffHeight&amp;quot;, &amp;quot;arrows&amp;quot;),
             link.arr.type = &amp;quot;big.arrow&amp;quot;, diffHeight = -0.04, 
             link.sort = TRUE, link.largest.ontop = TRUE, 
             annotationTrack = &amp;quot;grid&amp;quot;,
             preAllocateTracks = list(track.height = 0.25))

circos.track(track.index = 1, bg.border = NA, panel.fun = function(x, y) {
  s = get.cell.meta.data(&amp;quot;sector.index&amp;quot;)
  xx = get.cell.meta.data(&amp;quot;xlim&amp;quot;)
  circos.text(x = mean(xx), y = 0.2, 
              labels = s, cex = 0.7, adj = c(0, 0.5),
              facing = &amp;quot;clockwise&amp;quot;, niceFacing = TRUE)
  circos.axis(h = &amp;quot;bottom&amp;quot;,
              labels.cex = 0.5,
              labels.pos.adjust = FALSE,
              labels.niceFacing = FALSE)
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The legend is added using the &lt;code&gt;legend()&lt;/code&gt; function using the &lt;a href=&#34;http://colorbrewer2.org/#type=qualitative&amp;amp;scheme=Set1&amp;amp;n=4]&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Set1&lt;/a&gt; colour palette, that we used as the basis of regional shades in the colour column of &lt;code&gt;d2&lt;/code&gt;; see the &lt;a href=&#34;[https://cran.r-project.org/web/packages/shades/index.html]&#34;&gt;shades&lt;/a&gt; package for creating palettes of similar colours.&lt;/p&gt;
&lt;h2 id=&#34;legend&#34;&gt;Legend&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(RColorBrewer)
legend(x = 0.7, y = 1.1, 
       legend = unique(d2$region), 
       fill = brewer.pal(n = 4, name = &amp;quot;Set1&amp;quot;), 
       bty = &amp;quot;n&amp;quot;, cex = 0.8,
       x.intersp = 0.5, 
       title = &amp;quot;   Region&amp;quot;, title.adj = 0) 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;saving&#34;&gt;Saving&lt;/h2&gt;
&lt;p&gt;To save the image in a PDF plot surround the plotting code above between the &lt;code&gt;pdf()&lt;/code&gt; function and &lt;code&gt;dev.off()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pdf(file = &amp;quot;figure1.pdf&amp;quot;, width = 6, height = 6)

### insert code from above

dev.off()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;image-files&#34;&gt;Image Files&lt;/h2&gt;
&lt;p&gt;To convert the PDF to a PNG file I recommend the &lt;a href=&#34;https://cran.r-project.org/web/packages/magick/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;magick&lt;/a&gt; package:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(magick)
p &amp;lt;- image_read_pdf(&amp;quot;figure1.pdf&amp;quot;)
image_write(image = p, path = &amp;quot;figure1.png&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;chinese-labels&#34;&gt;Chinese Labels&lt;/h2&gt;
&lt;p&gt;To replace the labels with their Chinese names, as in the plot above, replace the code for the &lt;code&gt;s&lt;/code&gt; object in the &lt;code&gt;circos.track()&lt;/code&gt; function to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    s = d2 %&amp;gt;% 
      filter(name == get.cell.meta.data(&amp;quot;sector.index&amp;quot;)) %&amp;gt;%
      select(name_zh) %&amp;gt;%
      pull()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You might also need to add &lt;code&gt;family = &amp;quot;GB1&amp;quot;&lt;/code&gt; in the &lt;code&gt;pdf()&lt;/code&gt; function for Chinese characters to render in a PDF viewer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Regional migrant population changes visualized using animated chord diagrams</title>
      <link>https://guyabel.com/post/regional-migrant-chord-diagrams/</link>
      <pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/regional-migrant-chord-diagrams/</guid>
      <description>&lt;p&gt;During the last few months I have given some introductory talks on international migration in Asia and Europe. I had a couple of requests to share the animated chord diagrams that I created for others to use in their teaching materials.  These are below, along with some extra plots for Africa, the Americas (Northern, Central and Southern America as well as the Caribbean) and Oceania. Feel free to download the plots using right click over the animation and then &lt;code&gt;Save Video as&lt;/code&gt; or from &lt;a href=&#34;https://github.com/guyabel/personal-site/tree/master/content/post/migrant-stock-chord-digrams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The chords in the diagrams represent the connection between the places of birth (at the base of the chord) and places of residence (at the arrow head of the chord). The width of based of the chords correspond to the size of the migrant population in millions. Chords are ordered relative to their size, with the largest migrant stocks plotted at the beginning of the country segments. The ordering of chords jumps around over time as the relative rankings of the largest foreign-born populations change in each country. Values for the migrant population sizes are from the &lt;del&gt;2017&lt;/del&gt; &lt;del&gt;2019&lt;/del&gt; 2020 revision of the United Nations DESA &lt;a href=&#34;https://www.un.org/development/desa/pd/content/international-migrant-stock&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;International Migrant Stock Data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: you might have to right click, select show controls and hit play to start the animations depending on your browsers - right clicking can also allow you to access controls on the play back speed.&lt;/p&gt;
&lt;style&gt;
video {
  /* override other styles to make responsive */
  width: 100%    !important;
  height: auto   !important;
  max-height: 720px
}
h2 {
  color: #fff;
  font-size: 0px;
}
&lt;/style&gt;
&lt;h2 id=&#34;asia&#34;&gt;Asia&lt;/h2&gt;
&lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;ims-abel-asia.png&#34;&gt;
  &lt;source src=&#34;ims-abel-asia.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;hr&gt;
&lt;h2 id=&#34;europe&#34;&gt;Europe&lt;/h2&gt;
&lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;ims-abel-europe.png&#34;&gt;
  &lt;source src=&#34;ims-abel-europe.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;hr&gt;
&lt;h2 id=&#34;africa&#34;&gt;Africa&lt;/h2&gt;
&lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;ims-abel-africa.png&#34;&gt;
  &lt;source src=&#34;ims-abel-africa.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;hr&gt;
&lt;h2 id=&#34;americas&#34;&gt;Americas&lt;/h2&gt;
&lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;ims-abel-america.png&#34;&gt;
  &lt;source src=&#34;ims-abel-america.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;hr&gt;
&lt;h2 id=&#34;oceania&#34;&gt;Oceania&lt;/h2&gt;
&lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;ims-abel-oceania.png&#34;&gt;
  &lt;source src=&#34;ims-abel-oceania.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt;
&lt;p&gt;The data in these plots represent migrant population totals, not period migration flows, hence the usual caveats associated with migrant stock data apply:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Underlying migration flows might form different patterns as migrants might not be moving from their country of birth.&lt;/li&gt;
&lt;li&gt;Migrant populations can decrease from deaths as well as outward migration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;r-code&#34;&gt;R code&lt;/h3&gt;
&lt;p&gt;As in my previous post on &lt;a href=&#34;http://guyabel.com/post/animated-directional-chord-diagrams/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;animated chord diagrams&lt;/a&gt; I used the &lt;a href=&#34;https://cran.r-project.org/web/packages/circlize/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;circlize&lt;/code&gt;&lt;/a&gt; package in R to produce each chord diagrams for each frame of the animation and &lt;a href=&#34;https://cran.r-project.org/web/packages/tweenr/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;tweenr&lt;/code&gt;&lt;/a&gt; for the intermediate data. The country flags were added using the &lt;code&gt;circos.raster()&lt;/code&gt; function in circlize. I used &lt;a href=&#34;https://cran.r-project.org/web/packages/magick/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;magick&lt;/code&gt;&lt;/a&gt; to read in the multipage PDF file of plots over time and &lt;a href=&#34;https://cran.r-project.org/web/packages/animation/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;animation&lt;/code&gt;&lt;/a&gt; to produce the MP4 file. I am beginning to prefer MP4 files to GIF as the file size are smaller - so quicker loading - and most browsers display MP4 videos with controls.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Animating the evoloution of football kits using R</title>
      <link>https://guyabel.com/post/football-kits/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/football-kits/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m loving the &lt;a href=&#34;https://cran.r-project.org/web/packages/magick/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;magick&lt;/a&gt; package at the moment. Reading through the &lt;a href=&#34;https://cran.r-project.org/web/packages/magick/vignettes/intro.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;vignette&lt;/a&gt; I spotted the &lt;code&gt;image_morph()&lt;/code&gt; function. In this post I experiment with the function to build the GIF below that shows the changes in the England football first kit over time, using images from the excellent &lt;a href=&#34;http://www.historicalkits.co.uk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Historical Football Kits&lt;/a&gt; website.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;abel-england.gif&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;scraping&#34;&gt;Scraping&lt;/h2&gt;
&lt;p&gt;The Historical Football Kits website has a detailed section on England kits spread over six pages, starting from the first outfits used in &lt;a href=&#34;http://www.historicalkits.co.uk/international/england/england-1872-1939.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1872&lt;/a&gt;. Each pages includes some interesting discussion - and importantly for this post - images of the kits.&lt;/p&gt;
&lt;p&gt;We can use the &lt;code&gt;read_html()&lt;/code&gt; from the &lt;a href=&#34;https://cran.r-project.org/web/packages/xml2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xml2&lt;/a&gt; package and &lt;code&gt;map()&lt;/code&gt; from &lt;a href=&#34;https://cran.r-project.org/web/packages/purrr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purrr&lt;/a&gt; to read and save the source code of each page.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(rvest)
library(tidyverse)

htmls &amp;lt;- c( 
  &amp;quot;http://www.historicalkits.co.uk/international/england/england-1872-1939.html&amp;quot;,
  &amp;quot;http://www.historicalkits.co.uk/international/england/england-1946-1960.html&amp;quot;,
  &amp;quot;http://www.historicalkits.co.uk/international/england/england-1960-1983.html&amp;quot;,
  &amp;quot;http://www.historicalkits.co.uk/international/england/england-1984-1997.html&amp;quot;,
  &amp;quot;http://www.historicalkits.co.uk/international/england/england-1997-2010.html&amp;quot;,
  &amp;quot;http://www.historicalkits.co.uk/international/england/england-2010-2019.html&amp;quot;
) %&amp;gt;%
  map(read_html)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the source code we can then find the URLs of each kit image files using &lt;code&gt;html_nodes()&lt;/code&gt; and &lt;code&gt;html_attr()&lt;/code&gt; from &lt;a href=&#34;https://cran.r-project.org/web/packages/rvest/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rvest&lt;/a&gt;. I used purrr&amp;rsquo;s &lt;code&gt;map_dfr()&lt;/code&gt; to store the links in a tibble and then dropped rows that do not contain kit image links or are images of away kits, kits used in single game or links to shops to buy replicas. This filtering was based on the image label or image URL and performed with the aid of the &lt;code&gt;str_detect()&lt;/code&gt; function from &lt;a href=&#34;https://cran.r-project.org/web/packages/stringr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;stringr&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;scrape_img_url &amp;lt;- function(html){
  html %&amp;gt;%
    html_nodes(&amp;quot;.float p , .float img&amp;quot;) %&amp;gt;%
    html_attr(&amp;quot;src&amp;quot;) %&amp;gt;%
    as_tibble() %&amp;gt;%
    set_names(&amp;quot;img_url&amp;quot;) %&amp;gt;%
    mutate(label = html %&amp;gt;% 
             html_nodes(&amp;quot;.float p , .float img&amp;quot;) %&amp;gt;%
             html_text() %&amp;gt;%
             c(., NA) %&amp;gt;%
             .[-1])
}

d1 &amp;lt;- htmls %&amp;gt;% 
  map_dfr(scrape_img_url) %&amp;gt;%
  filter(str_detect(string = img_url, pattern = &amp;quot;/international/england&amp;quot;),
         !str_detect(string = label, pattern = &amp;quot;change|alternate|Alternate|Change&amp;quot;),
         !str_detect(string = label, pattern = &amp;quot; v |Third&amp;quot;),
         !str_detect(string = img_url, pattern = &amp;quot;lithuania|italy|yellow|red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(d1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                               img_url     label
## 1      /international/england/images/england-1872.gif      1872
## 2      /international/england/images/england-1882.gif 1879-1900
## 3      /international/england/images/england-1900.gif 1900-1914
## 4 /international/england/images/england-1920-1932.gif 1920-1930
## 5      /international/england/images/england-1921.gif 1930-1934
## 6      /international/england/images/england-1934.gif      1934
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Given these URLs I then downloaded each of the images which are stored in a single R object &lt;code&gt;kits&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(magick)

kits &amp;lt;- d1 %&amp;gt;%
  mutate(img_url = paste0(&amp;quot;http://www.historicalkits.co.uk&amp;quot;, img_url),
         img_url = str_replace(string =img_url, pattern =&amp;quot; &amp;quot;, replacement = &amp;quot;%20&amp;quot;)) %&amp;gt;%
  select(img_url) %&amp;gt;%
  map(image_read) %&amp;gt;%
  set_names(&amp;quot;img&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Typing &lt;code&gt;kits&lt;/code&gt; into R will display each kit in the RStudio viewer (it will quickly run through each image). The console displays summary information for each image in the &lt;code&gt;kits&lt;/code&gt; object.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; kits
$img
   format width height colorspace filesize
1     GIF   170    338       sRGB        0
2     GIF   170    338       sRGB        0
3     GIF   170    338       sRGB        0
4     GIF   170    338       sRGB        0
5     GIF   170    338       sRGB        0
6     GIF   170    338       sRGB        0
7     GIF   170    338       sRGB        0
8     GIF   170    338       sRGB        0
9     GIF   170    338       sRGB        0
10    GIF   170    338       sRGB        0
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;annotating-images&#34;&gt;Annotating Images&lt;/h2&gt;
&lt;p&gt;Before creating any GIF I wanted add annotations for the year and the copyright information. To do this I first created a border using &lt;code&gt;image_border()&lt;/code&gt; in magick and then &lt;code&gt;image_annotate()&lt;/code&gt; to add the text. I wrapped these edits into an &lt;code&gt;add_text()&lt;/code&gt; function and then applied each to the kit images.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;add_text &amp;lt;- function(img, label){
  img %&amp;gt;%
    image_border(geometry = &amp;quot;10x60&amp;quot;, color = &amp;quot;white&amp;quot;) %&amp;gt;%
    image_chop(&amp;quot;0x45&amp;quot;) %&amp;gt;%
    image_annotate(text = label, gravity = &amp;quot;north&amp;quot;) %&amp;gt;%
    image_annotate(
      text = &amp;quot;Animation by @guyabelguyabel&amp;quot;, gravity = &amp;quot;south&amp;quot;, location = &amp;quot;+0+45&amp;quot;
    ) %&amp;gt;%
    image_annotate(
      text = &amp;quot;Images are Copyright of Historical\nFootball Kits and reproduced by\nkind permission.&amp;quot;,
      gravity = &amp;quot;south&amp;quot;
    )
}

for(i in 1:length(kits$img)){
  kits$img[i] &amp;lt;- add_text(img = kits$img[i], label = d1$label[i])
  # add extra border to make final images square
  kits$img[i] &amp;lt;- image_border(image = kits$img[i], geometry = &amp;quot;85x1&amp;quot;, color = &amp;quot;white&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;creating-a-gif&#34;&gt;Creating a GIF&lt;/h2&gt;
&lt;p&gt;The final step was to bind together the set of images in an animated GIF with smooth transition images between each frame. To do this I used the &lt;code&gt;image_morph()&lt;/code&gt; twice. First to repeat the same image so that the GIF would remain stable for a few frames (&lt;code&gt;kits_morph1&lt;/code&gt; below). Then again to create a set of morphing images between successive kits (&lt;code&gt;kits_morph0&lt;/code&gt; below). The full set of frames were stored in &lt;code&gt;kits_ani&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;kits_ani &amp;lt;- image_morph(c(kits$img[1], kits$img[1]), frames = 4)
for(i in 2:length(kits$img)){
  kits_morph0 &amp;lt;- image_morph(c(kits$img[i-1], kits$img[i]), frames = 4)
  kits_morph1 &amp;lt;- image_morph(c(kits$img[i], kits$img[i]), frames = 4)
  kits_ani &amp;lt;- c(kits_ani, kits_morph0)
  kits_ani &amp;lt;- c(kits_ani, kits_morph1)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create an animation I passed the set of frames in the &lt;code&gt;kits_morph&lt;/code&gt; object to the &lt;code&gt;image_animate()&lt;/code&gt; and &lt;code&gt;image_write()&lt;/code&gt; functions to give the image above.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;kits_ani %&amp;gt;%
  image_animate(fps = 10) %&amp;gt;%
  image_write(path = &amp;quot;england.gif&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This bit of code can take a while to execute if the are many frames (see my comments towards the end of the post).&lt;/p&gt;
&lt;h2 id=&#34;club-teams&#34;&gt;Club Teams&lt;/h2&gt;
&lt;p&gt;Similar code as above can be used to create images for club teams. I tried this out for the mighty Reading. As the Reading kits on &lt;a href=&#34;http://www.historicalkits.co.uk/Reading/Reading.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Historical Football Kits&lt;/a&gt; are on only one page and includes only home kits, finding the image URLs was much easier&amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d1 &amp;lt;- read_html(&amp;quot;http://www.historicalkits.co.uk/Reading/Reading.htm&amp;quot;) %&amp;gt;%
  scrape_img_url() %&amp;gt;%
  filter(str_detect(string = img_url, pattern = &amp;quot;/Reading&amp;quot;),
         !str_detect(string = img_url, pattern = &amp;quot;unknown&amp;quot;)) %&amp;gt;%
  mutate(
    label = str_replace_all(string = label,
                            pattern = &amp;quot;[:alpha:]|\\s&amp;quot;, 
                            replacement = &amp;quot;&amp;quot;)
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I could then run the same code as above to scrape the images, annotate the year and copyright information and build the GIF.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;abel-reading.gif&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;Ian Holloway - &lt;a href=&#34;https://www.getreading.co.uk/news/reading-berkshire-news/sky-sports-pundit-ian-holloway-12023342&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;we had hoops first&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I did have trouble creating a GIF&amp;rsquo;s when I used more frames to morph images between successive kits, for example when using &lt;code&gt;frames = 10&lt;/code&gt; in &lt;code&gt;image_morphi()&lt;/code&gt;. I could not consistently replicate the error, but I suspect it is something related to the memory size - my R session would freeze when passing &lt;code&gt;image_animate()&lt;/code&gt; or &lt;code&gt;image_write()&lt;/code&gt; on the &lt;code&gt;kits_ani&lt;/code&gt; R object when it contained a large number of images.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>R code for animated chord diagrams</title>
      <link>https://guyabel.com/post/animated-directional-chord-diagrams/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/animated-directional-chord-diagrams/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;A little while ago my paper in &lt;em&gt;International Migration Review&lt;/em&gt; on global migration flow estimates came out &lt;a href=&#34;http://guyabel.com/publication/global-migration-estimates-by-gender/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;online&lt;/a&gt;. The paper includes a number of directional chord diagrams to visualize the estimates.&lt;/p&gt;
&lt;p&gt;Recently I have been playing around &lt;code&gt;tweenr&lt;/code&gt; and the &lt;code&gt;magick&lt;/code&gt; packages for animated population pyramids. In this post I attempt to show how to use these packages to produce animated directional chord diagrams of global migration flow estimates&lt;/p&gt;
&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;
&lt;p&gt;The first step is to read into R two data frames (these are in my &lt;code&gt;migest&lt;/code&gt; R package if you wish to replicate the code below).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Time series of bilateral migration flow estimates:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# install.packages(&amp;quot;migest&amp;quot;)
library(tidyverse)
d0 &amp;lt;- read_csv(system.file(&amp;quot;imr&amp;quot;, &amp;quot;reg_flow.csv&amp;quot;, package = &amp;quot;migest&amp;quot;))
d0 
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 891 Ã 4
##    year0 orig_reg     dest_reg                         flow
##    &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;                           &amp;lt;dbl&amp;gt;
##  1  1960 Africa       Africa                        1377791
##  2  1960 Africa       Eastern Asia                     5952
##  3  1960 Africa       Eastern Europe &amp;amp; Central Asia    7303
##  4  1960 Africa       Europe                         919252
##  5  1960 Africa       Latin America &amp;amp; Caribbean       15796
##  6  1960 Africa       Northern America                82463
##  7  1960 Africa       Oceania                         32825
##  8  1960 Africa       Southern Asia                   35603
##  9  1960 Africa       Western Asia                   106580
## 10  1960 Eastern Asia Africa                          37301
## # â¦ with 881 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Some regional meta data for chord diagram plots:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d1 &amp;lt;- read_csv(system.file(&amp;quot;vidwp&amp;quot;, &amp;quot;reg_plot.csv&amp;quot;, package = &amp;quot;migest&amp;quot;))
d1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 Ã 5
##   region                        order1 col1    reg1           reg2          
##   &amp;lt;chr&amp;gt;                          &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;         
## 1 Northern America                   1 #40A4D8 Northern       America       
## 2 Africa                             2 #33BEB7 Africa         &amp;lt;NA&amp;gt;          
## 3 Europe                             3 #B2C224 Europe         &amp;lt;NA&amp;gt;          
## 4 Eastern Europe &amp;amp; Central Asia      4 #FECC2F Eastern Europe &amp;amp; Central Asia
## 5 Western Asia                       5 #FBA127 Western        Asia          
## 6 Southern Asia                      6 #F66320 Southern       Asia          
## 7 Eastern Asia                       7 #DB3937 Eastern        Asia          
## 8 Oceania                            8 #A463D7 Oceania        &amp;lt;NA&amp;gt;          
## 9 Latin America &amp;amp; Caribbean          9 #0C5BCE Latin America  &amp;amp; Caribbean
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;tween&#34;&gt;Tween&lt;/h2&gt;
&lt;p&gt;The next step is to tween the data by migration corridor.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tweenr)

d2 &amp;lt;- d0 %&amp;gt;%
  mutate(corridor = paste(orig_reg, dest_reg, sep = &amp;quot; -&amp;gt; &amp;quot;)) %&amp;gt;%
  select(corridor, year0, flow) %&amp;gt;%
  mutate(ease = &amp;quot;linear&amp;quot;) %&amp;gt;%
  tween_elements(time = &amp;quot;year0&amp;quot;, group = &amp;quot;corridor&amp;quot;, ease = &amp;quot;ease&amp;quot;, nframes = 100) %&amp;gt;%
  as_tibble()
d2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8,181 Ã 4
##    year0    flow .frame .group                                 
##    &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;  &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                                  
##  1  1960 1377791      0 Africa -&amp;gt; Africa                       
##  2  1960    5952      0 Africa -&amp;gt; Eastern Asia                 
##  3  1960    7303      0 Africa -&amp;gt; Eastern Europe &amp;amp; Central Asia
##  4  1960  919252      0 Africa -&amp;gt; Europe                       
##  5  1960   15796      0 Africa -&amp;gt; Latin America &amp;amp; Caribbean    
##  6  1960   82463      0 Africa -&amp;gt; Northern America             
##  7  1960   32825      0 Africa -&amp;gt; Oceania                      
##  8  1960   35603      0 Africa -&amp;gt; Southern Asia                
##  9  1960  106580      0 Africa -&amp;gt; Western Asia                 
## 10  1960   37301      0 Eastern Asia -&amp;gt; Africa                 
## # â¦ with 8,171 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This creates larger data frame &lt;code&gt;d2&lt;/code&gt;, with 100 observations for each corridor, one for each frame in the animation. In the original data &lt;code&gt;d0&lt;/code&gt; there are only 11 observations for each corridor, one for each five-year period.&lt;/p&gt;
&lt;p&gt;Then some further minor data wrangling is required to ready the data for plotting using the &lt;code&gt;chordDiagram&lt;/code&gt; function; namely the first three columns in the data must correspond to the origin, destination and flow.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d2 &amp;lt;- d2 %&amp;gt;%
  separate(col = .group, into = c(&amp;quot;orig_reg&amp;quot;, &amp;quot;dest_reg&amp;quot;), sep = &amp;quot; -&amp;gt; &amp;quot;) %&amp;gt;%
  select(orig_reg, dest_reg, flow, everything()) %&amp;gt;%
  mutate(flow = flow/1e06)
d2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8,181 Ã 5
##    orig_reg     dest_reg                         flow year0 .frame
##    &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;                           &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;int&amp;gt;
##  1 Africa       Africa                        1.38     1960      0
##  2 Africa       Eastern Asia                  0.00595  1960      0
##  3 Africa       Eastern Europe &amp;amp; Central Asia 0.00730  1960      0
##  4 Africa       Europe                        0.919    1960      0
##  5 Africa       Latin America &amp;amp; Caribbean     0.0158   1960      0
##  6 Africa       Northern America              0.0825   1960      0
##  7 Africa       Oceania                       0.0328   1960      0
##  8 Africa       Southern Asia                 0.0356   1960      0
##  9 Africa       Western Asia                  0.107    1960      0
## 10 Eastern Asia Africa                        0.0373   1960      0
## # â¦ with 8,171 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;plots-for-each-frame&#34;&gt;Plots for Each Frame&lt;/h2&gt;
&lt;p&gt;Now the data is in the correct format, chord diagrams can be produced for each frame of the eventual animation. To do this, I used a &lt;code&gt;for&lt;/code&gt; loop to cycle through the tweend data. The arguments I used in the &lt;code&gt;circos.par&lt;/code&gt;, &lt;code&gt;chordDiagram&lt;/code&gt; and &lt;code&gt;circos.track&lt;/code&gt; functions to produce each plot are explained in more detail in the comments of the &lt;code&gt;migest&lt;/code&gt; &lt;a href=&#34;https://github.com/guyabel/migest/blob/master/demo/cfplot_reg2.R&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;demo&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# create a directory to store the individual plots
dir.create(&amp;quot;./plot-ani/&amp;quot;)

library(circlize)
for(f in unique(d2$.frame)){
  # open a PNG plotting device
  png(file = paste0(&amp;quot;./plot-ani/globalchord&amp;quot;, f, &amp;quot;.png&amp;quot;), height = 7, width = 7, 
      units = &amp;quot;in&amp;quot;, res = 500)
  
  # initialise the circos plot
  circos.clear()
  par(mar = rep(0, 4), cex=1)
  circos.par(start.degree = 90, track.margin=c(-0.1, 0.1), 
             gap.degree = 4, points.overflow.warning = FALSE)

  # plot the chord diagram
  chordDiagram(x = filter(d2, .frame == f), directional = 1, order = d1$region,
               grid.col = d1$col1, annotationTrack = &amp;quot;grid&amp;quot;,
               transparency = 0.25,  annotationTrackHeight = c(0.05, 0.1),
               direction.type = c(&amp;quot;diffHeight&amp;quot;, &amp;quot;arrows&amp;quot;), link.arr.type = &amp;quot;big.arrow&amp;quot;,
               diffHeight  = -0.04, link.sort = TRUE, link.largest.ontop = TRUE)
  
  # add labels and axis
  circos.track(track.index = 1, bg.border = NA, panel.fun = function(x, y) {
    xlim = get.cell.meta.data(&amp;quot;xlim&amp;quot;)
    sector.index = get.cell.meta.data(&amp;quot;sector.index&amp;quot;)
    reg1 = d1 %&amp;gt;% filter(region == sector.index) %&amp;gt;% pull(reg1)
    reg2 = d1 %&amp;gt;% filter(region == sector.index) %&amp;gt;% pull(reg2)
    
    circos.text(x = mean(xlim), y = ifelse(is.na(reg2), 3, 4),
                labels = reg1, facing = &amp;quot;bending&amp;quot;, cex = 1.1)
    circos.text(x = mean(xlim), y = 2.75, labels = reg2, facing = &amp;quot;bending&amp;quot;, cex = 1.1)
    circos.axis(h = &amp;quot;top&amp;quot;, labels.cex = 0.8
                labels.niceFacing = FALSE, labels.pos.adjust = FALSE)
  })
  
  # close plotting device
  dev.off()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;creating-an-animation&#34;&gt;Creating an animation&lt;/h2&gt;
&lt;p&gt;Using the &lt;code&gt;magick&lt;/code&gt; package an animation can be created by using the code below to&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Read in an initial plot and then combine together all other images created above.&lt;/li&gt;
&lt;li&gt;Scale the combined images.&lt;/li&gt;
&lt;li&gt;Animate the combined images and save as a &lt;code&gt;.gif&lt;/code&gt; or &lt;code&gt;mp4&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(magick)

img &amp;lt;- image_read(path = &amp;quot;./plot-ani/globalchord0.png&amp;quot;)
for(f in unique(d2$.frame)[-1]){
  img0 &amp;lt;- image_read(path = paste0(&amp;quot;./plot-ani/globalchord&amp;quot;,f,&amp;quot;.png&amp;quot;))
  img &amp;lt;- c(img, img0)
  message(f)
}

img1 &amp;lt;- image_scale(image = img, geometry = &amp;quot;720x720&amp;quot;)

ani0 &amp;lt;- image_animate(image = img1, fps = 10)
image_write(image = ani0, path = &amp;quot;./plot-ani/globalchord.gif&amp;quot;)
image_write_video(image = img1, path = &amp;quot;./plot-ani/globalchord.mp4&amp;quot;, framerate = 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This gives an output much like this minus the additional details in the corners:&lt;/p&gt;
&lt;style&gt;
video {
  /* override other styles to make responsive */
  width: 100%    !important;
  height: auto   !important;
  max-height: 720px
}
&lt;/style&gt;
&lt;video loop controls muted playsinline preload=&#34;none&#34; poster=&#34;abel-ani10-gf-dist.png&#34;&gt;
&lt;source src=&#34;abel-ani10-gf-dist.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt; 
&lt;h2 id=&#34;fixing-scales-in-chord-diagrams&#34;&gt;Fixing Scales in Chord Diagrams&lt;/h2&gt;
&lt;p&gt;Whilst the plot above allows comparisons of the distributions of flows overtime it is more difficult to compare volumes. For such comparisons, Zuguang Gu &lt;a href=&#34;http://zuguang.de/circlize_book/book/advanced-usage-of-chorddiagram.html#compare-two-chord-diagrams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;suggests&lt;/a&gt; scaling the gaps between the sectors on the outside of the chord diagram. I wrote a little function that can do this for flow data arranged in a tidy format;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;scale_gap &amp;lt;- function(flow_m, flow_max, gap_at_max = 1, gaps = NULL) {
  p &amp;lt;- flow_m / flow_max
  if(length(gap_at_max) == 1 &amp;amp; !is.null(gaps)) {
    gap_at_max &amp;lt;- rep(gap_at_max, gaps)
  }
  gap_degree &amp;lt;- (360 - sum(gap_at_max)) * (1 - p)
  gap_m &amp;lt;- (gap_degree + sum(gap_at_max))/gaps
  return(gap_m)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flow_m&lt;/code&gt; is the size of total flows in the matrix for the given year being re-scaled.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flow_max&lt;/code&gt; is the maximum size of the flow matrix over all years&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gap_at_max&lt;/code&gt; is the size in degrees of the gaps in the flow matrix in the year where the flows are at their all time maximum.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gaps&lt;/code&gt; is the number of gaps in the chord diagram (i.e. the number of regions).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The function can be used to derive the size of gaps in each frame for a new animation.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;d3 &amp;lt;- d2 %&amp;gt;%
  group_by(.frame) %&amp;gt;%
  summarise(flow = sum(flow)) %&amp;gt;%
  mutate(gaps = scale_gap(flow_m = flow, flow_max = max(.$flow), 
                          gap_at_max = 4, gaps = 9))

d3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 101 Ã 3
##    .frame  flow  gaps
##     &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1      0  17.6  25.9
##  2      1  17.8  25.7
##  3      2  18.1  25.6
##  4      3  18.3  25.4
##  5      4  18.5  25.2
##  6      5  18.7  25.1
##  7      6  18.9  24.9
##  8      7  19.1  24.7
##  9      8  19.3  24.6
## 10      9  19.6  24.4
## # â¦ with 91 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The calculations in &lt;code&gt;d3&lt;/code&gt; can then be plugged into the &lt;code&gt;for&lt;/code&gt; loop above, where the &lt;code&gt;circos.par()&lt;/code&gt; function is replaced by&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;circos.par(start.degree = 90, track.margin = c(-0.1, 0.1),
           gap.degree = filter(d3, .frame == f)$gaps, 
           points.overflow.warning = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the for loop has produced a new set of images, the same code to produce previous animation can be run to obtain the animated chord diagrams with changing gaps;&lt;/p&gt;
&lt;video loop controls muted playsinline preload=&#34;none&#34; poster=&#34;abel-ani10-gf-gap.png&#34;&gt;
&lt;source src=&#34;abel-ani10-gf-gap.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt; 
&lt;p&gt;Whilst the sector axes are now fixed, I am not convinced that changing the relative gaps is the best way to compare volumes when using animated chord diagrams. The sectors of all regions - bar Northern America - are rotating making it hard follow their changes over time.&lt;/p&gt;
&lt;p&gt;Fortunately there is new &lt;code&gt;xmax&lt;/code&gt; option in &lt;code&gt;chordDiagram&lt;/code&gt; that can be used to fix the lengths of the x-axis for each sector using a named vector. In the context of producing an animation, the historic maximum migration flows (of combined immigration and emigration flows) in each region can be used, calculated from the original data &lt;code&gt;d0&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(magrittr)

reg_max &amp;lt;- d0 %&amp;gt;%
  group_by(year0, orig_reg) %&amp;gt;%
  mutate(tot_out = sum(flow)) %&amp;gt;%
  group_by(year0, dest_reg) %&amp;gt;%
  mutate(tot_in = sum(flow)) %&amp;gt;%
  filter(orig_reg == dest_reg) %&amp;gt;%
  mutate(tot = tot_in + tot_out) %&amp;gt;%
  mutate(reg = orig_reg) %&amp;gt;%
  group_by(reg) %&amp;gt;%
  summarise(tot_max = max(tot)/1e06) %$%
  &#39;names&amp;lt;-&#39;(tot_max, reg)

reg_max
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                        Africa                  Eastern Asia 
##                     17.429942                     14.805479 
## Eastern Europe &amp;amp; Central Asia                        Europe 
##                      8.361300                     15.536978 
##     Latin America &amp;amp; Caribbean              Northern America 
##                      7.697638                     10.416927 
##                       Oceania                 Southern Asia 
##                      2.968412                     15.067631 
##                  Western Asia 
##                     15.072561
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;reg_max&lt;/code&gt; object can then be used in the &lt;code&gt;chordDiagram&lt;/code&gt; function in the &lt;code&gt;for&lt;/code&gt; loop above, replacing the original call with&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;chordDiagram(x = filter(d2, .frame == f), directional = 1, order = d1$region,
             grid.col = d1$col1, annotationTrack = &amp;quot;grid&amp;quot;,
             transparency = 0.25,  annotationTrackHeight = c(0.05, 0.1),
             direction.type = c(&amp;quot;diffHeight&amp;quot;, &amp;quot;arrows&amp;quot;), link.arr.type = &amp;quot;big.arrow&amp;quot;,
             diffHeight  = -0.04, link.sort = TRUE, link.largest.ontop = TRUE, 
             xmax = reg_max)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running the complete code - the adapted &lt;code&gt;for&lt;/code&gt; loop to produce the images and then the &lt;code&gt;magick&lt;/code&gt; functions to compile the animation - results in the following:&lt;/p&gt;
&lt;video loop controls muted playsinline preload=&#34;none&#34; poster=&#34;abel-ani10-gf-fix.png&#34;&gt;
  &lt;source src=&#34;abel-ani10-gf-fix.mp4&#34; type=&#34;video/mp4&#34;/&gt;
&lt;/video&gt; 
</description>
    </item>
    
  </channel>
</rss>
