<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>r-weekly | Guy Abel</title>
    <link>https://guyabel.com/categories/r-weekly/</link>
      <atom:link href="https://guyabel.com/categories/r-weekly/index.xml" rel="self" type="application/rss+xml" />
    <description>r-weekly</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-uk</language><copyright>© 2023 Guy Abel</copyright><lastBuildDate>Tue, 15 Nov 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://guyabel.com/media/icon_hua235b20c26de23a006d4e436991121ab_642_512x512_fill_lanczos_center_2.png</url>
      <title>r-weekly</title>
      <link>https://guyabel.com/categories/r-weekly/</link>
    </image>
    
    <item>
      <title>Animated population tree maps</title>
      <link>https://guyabel.com/post/animated-population-treemaps/</link>
      <pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/animated-population-treemaps/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;The global population hit 8 billion &lt;a href=&#34;https://www.un.org/en/desa/world-population-reach-8-billion-15-november-2022&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;today&lt;/a&gt;. To mark the passing an absolute population total I created some animated tree map plots in R to visualize relative past and future population totals for all countries.&lt;/p&gt;
&lt;h2 id=&#34;plots&#34;&gt;Plots&lt;/h2&gt;
&lt;p&gt;The first animated plot shows the changes over time in the distribution of population totals based on the latest &lt;a href=&#34;https://population.un.org/wpp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;United Nations&lt;/a&gt; data, provided in the &lt;a href=&#34;https://github.com/PPgp/wpp2022&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wpp2022&lt;/a&gt; package.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;abel-tree-pop.gif&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;The second animation shows the changes over time in the distribution of population with at least a completed secondary education. Country estimates and projections were obtained from the &lt;a href=&#34;http://dataexplorer.wittgensteincentre.org/wcde-v2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wittgenstein Centre for Human Capital and Demography&lt;/a&gt; via the &lt;a href=&#34;https://guyabel.github.io/wcde/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wcde&lt;/a&gt; package that I helped develop. The past estimates of education specific populations are based on a method to breakdown the United Nations population data. However, the future population totals (and the relative size of each country) differ between the United Nations and the Wittgenstein Centre as each group use separate assumptions and methods in their projection models.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;abel-tree-hc.gif&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;r-code&#34;&gt;R Code&lt;/h2&gt;
&lt;p&gt;Commented code to create the animated plots below are in two Gist &lt;a href=&#34;https://gist.github.com/guyabel/2307ecdd9844b6fd504b97144758a656&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://gist.github.com/guyabel/56f6b7750c44d1444675d93a599cccaa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. You can run the script directly in R using the following&amp;hellip;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(devtools)
# UN population data
source_gist(&#34;https://gist.github.com/guyabel/2307ecdd9844b6fd504b97144758a656&#34;)
# Wittgenstein Centre completed secondary education population data
source_gist(&#34;https://gist.github.com/guyabel/56f6b7750c44d1444675d93a599cccaa&#34;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first part of each script imports the data into R, adds the continent and region names to help order the layout, and adds short country names for labels used in the plot.&lt;/p&gt;
&lt;p&gt;The second part of the code creates a function for a single tree plot in a specific year. The function is then used twice. First to animate past data and second to animate future data. I created separate animations to allow for a pause in the GIF at 2022 and to signal in the title that data for future population distributions are based on projections.&lt;/p&gt;
&lt;p&gt;The key to the animating tree maps is to set &lt;code&gt;layout = &amp;quot;fixed&amp;quot;&lt;/code&gt; in the &lt;code&gt;geom_treemap()&lt;/code&gt; function (in the &lt;a href=&#34;https://cran.r-project.org/web/packages/treemapify/vignettes/introduction-to-treemapify.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;treemapify&lt;/a&gt; package). I chose to group the countries by continent and then sub-region, locating neighbouring counties in the same part of the tree map and using the same fill colour.&lt;/p&gt;
&lt;p&gt;The third part of the code generates two separate GIF files for each time period and then combines them into one.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The evolution of squad compositions at UEFA European Championships</title>
      <link>https://guyabel.com/post/uefa-ec-chord-diagram/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/uefa-ec-chord-diagram/</guid>
      <description>&lt;p&gt;I have been playing around with &lt;a href=&#34;https://rvest.tidyverse.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rvest&lt;/a&gt; once again, and decided to extend some old &lt;a href=&#34;https://gjabel.wordpress.com/2016/06/15/euro-2016-squads/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code&lt;/a&gt; to put together a data base on the squads at past European Championships from &lt;a href=&#34;https://en.wikipedia.org/wiki/UEFA_Euro_2020_squads&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikipedia&lt;/a&gt;. I wanted to use the chordDiagram() function in the &lt;a href=&#34;https://jokergoo.github.io/circlize_book/book/the-chorddiagram-function.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;circlize&lt;/a&gt; package in R to illustrate the links between the league of the clubs where each national team player is represented.&lt;/p&gt;
&lt;p&gt;A few days ago, the squads were confirmed for Euro2020. The chords between the leagues and national teams form one big hair ball:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;featured.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;The chords represent connections between the country of a player&amp;rsquo;s club (at the chord base) and their national team (at the arrow head). The colours of each chord in the plot are based on the shirt of each national team. Chord thickness represents the number of players per club country-national team combination. The countries are ordered by the groups that they will play in during the first round (in the animation below I order the teams by their first appearance at a tournament). The countries at the top of the diagram with no flags are leagues where the national team are not represented at the tournament, but some of clubs have players representing other national teams.&lt;/p&gt;
&lt;p&gt;The chords coming out of each sector are ordered by size - it’s interesting to see more Austrian than German players playing in German leagues, and more Welsh than English players playing in English leagues.&lt;/p&gt;
&lt;p&gt;I adapted some code from animated migration &lt;a href=&#34;https://guyabel.com/categories/chord-diagram/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;chord diagrams&lt;/a&gt; to provide a history of the relationships between the club leagues of the players and the national team squads at each European Championship. In most of the early tournaments almost all the players came from clubs in their home country. Slowly you can see the increasing amount of national team players coming from clubs abroad and the expansion of the number of teams in the tournament.&lt;/p&gt;
&lt;style&gt;
video {
  /* override other styles to make responsive */
  width: 100%    !important;
  height: auto   !important;
  max-height: 720px
}
&lt;/style&gt;
&lt;video loop=&#34;loop&#34; controls&gt;
  &lt;source src=&#34;abel-euro.mp4&#34; type=&#34;video/mp4&#34; /&gt;
&lt;/video&gt;
&lt;p&gt;Note: you might have to right click, select show controls and hit play to start the animations depending on your browsers - right clicking can also allow you to access controls on the play back speed.&lt;/p&gt;
&lt;h2 id=&#34;r-code&#34;&gt;R Code&lt;/h2&gt;
&lt;p&gt;I put the data and all the R code to scrape the squads, flags, kit colours and tournament logos in a Github &lt;a href=&#34;https://github.com/guyabel/uefa-ec&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repository&lt;/a&gt;. The R code to produce the plot and animation are also in the repository. The Data Digest has a nice YouTube &lt;a href=&#34;https://www.youtube.com/watch?v=N0l9ebyLV-k&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tutorial&lt;/a&gt; to explain the code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Animated Sankey plots of global migrant populations</title>
      <link>https://guyabel.com/post/animated-sankey/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      <guid>https://guyabel.com/post/animated-sankey/</guid>
      <description>&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;Sankey plots have been used to visualize bilateral migration many times. My favorite examples of Sankey plots for migration data tend to be when there are only few regions or countries. As the number of regions or countries increases the plot become more cumbersome, where labels for the smaller areas get too small and the plotting area becomes a very long rectangle making it awkward to fit on paper or view on the screen. In such cases I prefer &lt;a href=&#34;https://guyabel.com/post/global-migrant-stocks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;chord diagrams&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The recent highlights &lt;a href=&#34;https://www.un.org/development/desa/pd/sites/www.un.org.development.desa.pd/files/undesa_pd_2020_international_migration_highlights.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;document&lt;/a&gt; for the UN international migration stock data contained a couple of Sankey plots for the data in 2020. In this post I have created animated versions of one of the plots in the report to show changes in migrant distributions between 1990 and 2020 by World Bank income groups. I am using the destination and origin migrant stock data of the UN that can found online &lt;a href=&#34;https://www.un.org/development/desa/pd/content/international-migrant-stock&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; - see the data links on the right hand side.&lt;/p&gt;
&lt;h2 id=&#34;r-code&#34;&gt;R Code&lt;/h2&gt;
&lt;p&gt;Commented code to create the animated plots below are in a Gist &lt;a href=&#34;https://gist.github.com/guyabel/f7c844f18c4d11916a6ee000532d0e8e&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. You can run the script directly in R using the following&amp;hellip;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(devtools)
source_gist(&#34;https://gist.github.com/guyabel/f7c844f18c4d11916a6ee000532d0e8e&#34;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;hellip;so long as you have installed all packages used in the script. You might also need to edit the &lt;code&gt;saveVideo()&lt;/code&gt; function for the location of &lt;code&gt;ffmpeg.exe&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The first part of the code imports the data into R, extracts the rows for the stock data by the World Bank income groups and creates a tweened data set for each frame of the animation.&lt;/p&gt;
&lt;p&gt;The second part of the code creates the animated plot file using ggplot and &lt;code&gt;geom_parallel_sets()&lt;/code&gt; in &lt;a href=&#34;https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ggforce&lt;/a&gt;. There are a few packages in R that have functions for Sankey plots, for example &lt;a href=&#34;https://github.com/gaborcsardi/sankey#readme&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sankey&lt;/a&gt;, &lt;a href=&#34;https://cran.r-project.org/web/packages/PantaRhei/vignettes/panta-rhei.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PantaRhei&lt;/a&gt;, &lt;a href=&#34;http://christophergandrud.github.io/networkD3/#sankey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;networkD3&lt;/a&gt;, &lt;a href=&#34;https://cran.rstudio.com/web/packages/sankeywheel/vignettes/sankeywheel.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sankeywheel&lt;/a&gt;, &lt;a href=&#34;https://plotly.com/r/sankey-diagram/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;plotly&lt;/a&gt; and &lt;a href=&#34;https://github.com/davidsjoberg/ggsankey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ggsankey&lt;/a&gt;. The &lt;a href=&#34;https://corybrunson.github.io/ggalluvial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ggalluvial&lt;/a&gt; packages also produces Sankey-type plots, but without spaces between each sector. I used ggforce because it is pretty easy to tweak the non-Sankey parts of the plot using ggplot functions, and  I had hoped that it would play well with gganimate - which it didn&amp;rsquo;t, hence the use of tweenr - but perhaps &lt;a href=&#34;https://github.com/thomasp85/ggforce/issues/235&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;one day&lt;/a&gt; it will.&lt;/p&gt;
&lt;h2 id=&#34;plots&#34;&gt;Plots&lt;/h2&gt;
&lt;p&gt;The first animated plot shows the changes over time where the y-axis increases as the migrant populations grow larger. It shows the evolution in the relative distributions of the origin, destination and the linking migrant corridors, in particular the relative growth of migrants in high income countries.&lt;/p&gt;
&lt;style&gt;
.carousel-indicators {
  bottom:-3%
}
.carousel-indicators &gt; li,
.carousel-indicators &gt; li.active{
    width: 40%;
    height: 2%;
    border-radius: 0;
    border: solid 1px grey;
    background: transparent;
    text-indent: 0;
    text-align: center;
}
.carousel-indicators &gt; li.active {
    background: #4caf50;
}
video {
  /* override other styles to make responsive */
  width: 100%    !important;
  height: auto   !important;
  max-height: 720px
}
&lt;/style&gt;
&lt;div id=&#34;carousel_free&#34; class=&#34;carousel slide&#34;&gt;
  &lt;ol class=&#34;carousel-indicators&#34;&gt;
    &lt;li data-target=&#34;#carousel_free&#34; data-slide-to=&#34;0&#34; class=&#34;active&#34;&gt;Known Origins&lt;/li&gt;
    &lt;li data-target=&#34;#carousel_free&#34; data-slide-to=&#34;1&#34;&gt;All Origins&lt;/li&gt;
  &lt;/ol&gt;
  &lt;div class=&#34;carousel-inner&#34;&gt;
    &lt;div class=&#34;carousel-item active&#34;&gt;
            &lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;abel_free.png&#34;&gt;
        &lt;source src=&#34;abel_free.mp4&#34; type=&#34;video/mp4&#34; /&gt;
      &lt;/video&gt;
    &lt;/div&gt;
    &lt;div class=&#34;carousel-item&#34;&gt;
            &lt;video loop=&#34;loop&#34; width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;abel_free_unkown.png&#34;&gt;
        &lt;source src=&#34;abel_free_unknown.mp4&#34; type=&#34;video/mp4&#34; /&gt;
      &lt;/video&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;Note: you might have to right click, select show controls and hit play to start the animations depending on your browsers - right clicking can also allow you to access controls on the play back speed and save the video if you want to use it elsewhere.&lt;/p&gt;
&lt;p&gt;The second animated plot shows the changes over time where the y-axis is fixed to its maximum level. The adjustment allows the Sankey to grow into the plot space to see more clearly the changes in the overall levels of migrant populations.&lt;/p&gt;
&lt;div id=&#34;carousel_forced2&#34; class=&#34;carousel slide&#34;&gt;
  &lt;ol class=&#34;carousel-indicators&#34;&gt;
    &lt;li data-target=&#34;#carousel_forced2&#34; data-slide-to=&#34;0&#34; class=&#34;active&#34;&gt;Known Origins&lt;/li&gt;
    &lt;li data-target=&#34;#carousel_forced2&#34; data-slide-to=&#34;1&#34;&gt;All Origins&lt;/li&gt;
  &lt;/ol&gt;
  &lt;div class=&#34;carousel-inner&#34;&gt;
    &lt;div class=&#34;carousel-item active&#34;&gt;
      &lt;video loop width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;abel_fixed.png&#34;&gt;
        &lt;source src=&#34;abel_fixed.mp4&#34; type=&#34;video/mp4&#34; /&gt;
      &lt;/video&gt;
    &lt;/div&gt;
    &lt;div class=&#34;carousel-item&#34;&gt;
      &lt;video loop width=&#34;720&#34; height=&#34;720&#34; controls muted playsinline preload=&#34;none&#34; poster=&#34;abel_fixed_unknown.png&#34;&gt;
        &lt;source src=&#34;abel_fixed_unknown.mp4&#34; type=&#34;video/mp4&#34;/&gt;
      &lt;/video&gt; 
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;For both plots above there are alternative versions, that include an additional origin category for unknown place of birth. The values for the stock of migrants with unknown origins living in each World Bank income group are not in the main data frame in the UN excel sheet, but are in the regional aggregate sheets for each period. As a result the data importing and manipulation takes a bit of extra work (it is commented out in the Gist R script), but the plots are more &amp;lsquo;complete&amp;rsquo;, where the totals of the sectors sum to the global estimate of the UN at each time point.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
